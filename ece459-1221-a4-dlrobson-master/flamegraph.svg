<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="870" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="853.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="853.00"> </text><svg id="frames" x="10" width="1180" total_samples="304"><g><title>[unknown] (3 samples, 0.99%)</title><rect x="0.6579%" y="773" width="0.9868%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="3"/><text x="0.9079%" y="783.50"></text></g><g><title>[unknown] (3 samples, 0.99%)</title><rect x="0.6579%" y="757" width="0.9868%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="3"/><text x="0.9079%" y="767.50"></text></g><g><title>[unknown] (3 samples, 0.99%)</title><rect x="0.6579%" y="741" width="0.9868%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="3"/><text x="0.9079%" y="751.50"></text></g><g><title>[unknown] (3 samples, 0.99%)</title><rect x="0.6579%" y="725" width="0.9868%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="3"/><text x="0.9079%" y="735.50"></text></g><g><title>[unknown] (3 samples, 0.99%)</title><rect x="0.6579%" y="709" width="0.9868%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="3"/><text x="0.9079%" y="719.50"></text></g><g><title>[unknown] (3 samples, 0.99%)</title><rect x="0.6579%" y="693" width="0.9868%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="3"/><text x="0.9079%" y="703.50"></text></g><g><title>[unknown] (3 samples, 0.99%)</title><rect x="0.6579%" y="677" width="0.9868%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="3"/><text x="0.9079%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="0.9868%" y="661" width="0.6579%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="2"/><text x="1.2368%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="0.9868%" y="645" width="0.6579%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="2"/><text x="1.2368%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="0.9868%" y="629" width="0.6579%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="2"/><text x="1.2368%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="0.9868%" y="613" width="0.6579%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="2"/><text x="1.2368%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="0.9868%" y="597" width="0.6579%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="2"/><text x="1.2368%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="0.9868%" y="581" width="0.6579%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="2"/><text x="1.2368%" y="591.50"></text></g><g><title>[unknown] (6 samples, 1.97%)</title><rect x="0.0000%" y="789" width="1.9737%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="6"/><text x="0.2500%" y="799.50">[..</text></g><g><title>__GI___get_nprocs (1 samples, 0.33%)</title><rect x="1.6447%" y="773" width="0.3289%" height="15" fill="rgb(217,207,13)" fg:x="5" fg:w="1"/><text x="1.8947%" y="783.50"></text></g><g><title>__GI___open64_nocancel (1 samples, 0.33%)</title><rect x="1.6447%" y="757" width="0.3289%" height="15" fill="rgb(231,73,38)" fg:x="5" fg:w="1"/><text x="1.8947%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="1.6447%" y="741" width="0.3289%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="1"/><text x="1.8947%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="1.6447%" y="725" width="0.3289%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="1"/><text x="1.8947%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="1.6447%" y="709" width="0.3289%" height="15" fill="rgb(221,200,47)" fg:x="5" fg:w="1"/><text x="1.8947%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="1.6447%" y="693" width="0.3289%" height="15" fill="rgb(226,26,5)" fg:x="5" fg:w="1"/><text x="1.8947%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="1.6447%" y="677" width="0.3289%" height="15" fill="rgb(249,33,26)" fg:x="5" fg:w="1"/><text x="1.8947%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="1.6447%" y="661" width="0.3289%" height="15" fill="rgb(235,183,28)" fg:x="5" fg:w="1"/><text x="1.8947%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="1.6447%" y="645" width="0.3289%" height="15" fill="rgb(221,5,38)" fg:x="5" fg:w="1"/><text x="1.8947%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="1.6447%" y="629" width="0.3289%" height="15" fill="rgb(247,18,42)" fg:x="5" fg:w="1"/><text x="1.8947%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="1.6447%" y="613" width="0.3289%" height="15" fill="rgb(241,131,45)" fg:x="5" fg:w="1"/><text x="1.8947%" y="623.50"></text></g><g><title>[unknown] (86 samples, 28.29%)</title><rect x="2.3026%" y="773" width="28.2895%" height="15" fill="rgb(249,31,29)" fg:x="7" fg:w="86"/><text x="2.5526%" y="783.50">[unknown]</text></g><g><title>[unknown] (86 samples, 28.29%)</title><rect x="2.3026%" y="757" width="28.2895%" height="15" fill="rgb(225,111,53)" fg:x="7" fg:w="86"/><text x="2.5526%" y="767.50">[unknown]</text></g><g><title>[unknown] (86 samples, 28.29%)</title><rect x="2.3026%" y="741" width="28.2895%" height="15" fill="rgb(238,160,17)" fg:x="7" fg:w="86"/><text x="2.5526%" y="751.50">[unknown]</text></g><g><title>[unknown] (84 samples, 27.63%)</title><rect x="2.9605%" y="725" width="27.6316%" height="15" fill="rgb(214,148,48)" fg:x="9" fg:w="84"/><text x="3.2105%" y="735.50">[unknown]</text></g><g><title>[unknown] (83 samples, 27.30%)</title><rect x="3.2895%" y="709" width="27.3026%" height="15" fill="rgb(232,36,49)" fg:x="10" fg:w="83"/><text x="3.5395%" y="719.50">[unknown]</text></g><g><title>[unknown] (83 samples, 27.30%)</title><rect x="3.2895%" y="693" width="27.3026%" height="15" fill="rgb(209,103,24)" fg:x="10" fg:w="83"/><text x="3.5395%" y="703.50">[unknown]</text></g><g><title>[unknown] (83 samples, 27.30%)</title><rect x="3.2895%" y="677" width="27.3026%" height="15" fill="rgb(229,88,8)" fg:x="10" fg:w="83"/><text x="3.5395%" y="687.50">[unknown]</text></g><g><title>[unknown] (83 samples, 27.30%)</title><rect x="3.2895%" y="661" width="27.3026%" height="15" fill="rgb(213,181,19)" fg:x="10" fg:w="83"/><text x="3.5395%" y="671.50">[unknown]</text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="30.5921%" y="757" width="0.3289%" height="15" fill="rgb(254,191,54)" fg:x="93" fg:w="1"/><text x="30.8421%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="30.5921%" y="741" width="0.3289%" height="15" fill="rgb(241,83,37)" fg:x="93" fg:w="1"/><text x="30.8421%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="30.5921%" y="725" width="0.3289%" height="15" fill="rgb(233,36,39)" fg:x="93" fg:w="1"/><text x="30.8421%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="30.5921%" y="709" width="0.3289%" height="15" fill="rgb(226,3,54)" fg:x="93" fg:w="1"/><text x="30.8421%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="30.5921%" y="693" width="0.3289%" height="15" fill="rgb(245,192,40)" fg:x="93" fg:w="1"/><text x="30.8421%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;lab4::idea::IdeaGenerator&gt; (1 samples, 0.33%)</title><rect x="30.9211%" y="565" width="0.3289%" height="15" fill="rgb(238,167,29)" fg:x="94" fg:w="1"/><text x="31.1711%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::string::String,alloc::string::String)&gt;&gt; (1 samples, 0.33%)</title><rect x="30.9211%" y="549" width="0.3289%" height="15" fill="rgb(232,182,51)" fg:x="94" fg:w="1"/><text x="31.1711%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.33%)</title><rect x="30.9211%" y="533" width="0.3289%" height="15" fill="rgb(231,60,39)" fg:x="94" fg:w="1"/><text x="31.1711%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::string::String,alloc::string::String)]&gt; (1 samples, 0.33%)</title><rect x="30.9211%" y="517" width="0.3289%" height="15" fill="rgb(208,69,12)" fg:x="94" fg:w="1"/><text x="31.1711%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,alloc::string::String)&gt; (1 samples, 0.33%)</title><rect x="30.9211%" y="501" width="0.3289%" height="15" fill="rgb(235,93,37)" fg:x="94" fg:w="1"/><text x="31.1711%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.33%)</title><rect x="30.9211%" y="485" width="0.3289%" height="15" fill="rgb(213,116,39)" fg:x="94" fg:w="1"/><text x="31.1711%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.33%)</title><rect x="30.9211%" y="469" width="0.3289%" height="15" fill="rgb(222,207,29)" fg:x="94" fg:w="1"/><text x="31.1711%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.33%)</title><rect x="30.9211%" y="453" width="0.3289%" height="15" fill="rgb(206,96,30)" fg:x="94" fg:w="1"/><text x="31.1711%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.33%)</title><rect x="30.9211%" y="437" width="0.3289%" height="15" fill="rgb(218,138,4)" fg:x="94" fg:w="1"/><text x="31.1711%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.33%)</title><rect x="30.9211%" y="421" width="0.3289%" height="15" fill="rgb(250,191,14)" fg:x="94" fg:w="1"/><text x="31.1711%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.33%)</title><rect x="30.9211%" y="405" width="0.3289%" height="15" fill="rgb(239,60,40)" fg:x="94" fg:w="1"/><text x="31.1711%" y="415.50"></text></g><g><title>_int_free (1 samples, 0.33%)</title><rect x="30.9211%" y="389" width="0.3289%" height="15" fill="rgb(206,27,48)" fg:x="94" fg:w="1"/><text x="31.1711%" y="399.50"></text></g><g><title>lab4::idea::IdeaGenerator::run (1 samples, 0.33%)</title><rect x="31.2500%" y="565" width="0.3289%" height="15" fill="rgb(225,35,8)" fg:x="95" fg:w="1"/><text x="31.5000%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;lab4::checksum::Checksum&gt;&gt; (1 samples, 0.33%)</title><rect x="31.2500%" y="549" width="0.3289%" height="15" fill="rgb(250,213,24)" fg:x="95" fg:w="1"/><text x="31.5000%" y="559.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.33%)</title><rect x="31.2500%" y="533" width="0.3289%" height="15" fill="rgb(247,123,22)" fg:x="95" fg:w="1"/><text x="31.5000%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.33%)</title><rect x="31.2500%" y="517" width="0.3289%" height="15" fill="rgb(231,138,38)" fg:x="95" fg:w="1"/><text x="31.5000%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.33%)</title><rect x="31.2500%" y="501" width="0.3289%" height="15" fill="rgb(231,145,46)" fg:x="95" fg:w="1"/><text x="31.5000%" y="511.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.33%)</title><rect x="31.2500%" y="485" width="0.3289%" height="15" fill="rgb(251,118,11)" fg:x="95" fg:w="1"/><text x="31.5000%" y="495.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.33%)</title><rect x="31.2500%" y="469" width="0.3289%" height="15" fill="rgb(217,147,25)" fg:x="95" fg:w="1"/><text x="31.5000%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.66%)</title><rect x="31.5789%" y="549" width="0.6579%" height="15" fill="rgb(247,81,37)" fg:x="96" fg:w="2"/><text x="31.8289%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.66%)</title><rect x="31.5789%" y="533" width="0.6579%" height="15" fill="rgb(209,12,38)" fg:x="96" fg:w="2"/><text x="31.8289%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.66%)</title><rect x="31.5789%" y="517" width="0.6579%" height="15" fill="rgb(227,1,9)" fg:x="96" fg:w="2"/><text x="31.8289%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.66%)</title><rect x="31.5789%" y="501" width="0.6579%" height="15" fill="rgb(248,47,43)" fg:x="96" fg:w="2"/><text x="31.8289%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.66%)</title><rect x="31.5789%" y="485" width="0.6579%" height="15" fill="rgb(221,10,30)" fg:x="96" fg:w="2"/><text x="31.8289%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.66%)</title><rect x="31.5789%" y="469" width="0.6579%" height="15" fill="rgb(210,229,1)" fg:x="96" fg:w="2"/><text x="31.8289%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.66%)</title><rect x="31.5789%" y="453" width="0.6579%" height="15" fill="rgb(222,148,37)" fg:x="96" fg:w="2"/><text x="31.8289%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.66%)</title><rect x="31.5789%" y="437" width="0.6579%" height="15" fill="rgb(234,67,33)" fg:x="96" fg:w="2"/><text x="31.8289%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.66%)</title><rect x="31.5789%" y="421" width="0.6579%" height="15" fill="rgb(247,98,35)" fg:x="96" fg:w="2"/><text x="31.8289%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.66%)</title><rect x="31.5789%" y="405" width="0.6579%" height="15" fill="rgb(247,138,52)" fg:x="96" fg:w="2"/><text x="31.8289%" y="415.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.66%)</title><rect x="31.5789%" y="389" width="0.6579%" height="15" fill="rgb(213,79,30)" fg:x="96" fg:w="2"/><text x="31.8289%" y="399.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.66%)</title><rect x="31.5789%" y="373" width="0.6579%" height="15" fill="rgb(246,177,23)" fg:x="96" fg:w="2"/><text x="31.8289%" y="383.50"></text></g><g><title>_int_malloc (1 samples, 0.33%)</title><rect x="31.9079%" y="357" width="0.3289%" height="15" fill="rgb(230,62,27)" fg:x="97" fg:w="1"/><text x="32.1579%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.33%)</title><rect x="32.2368%" y="485" width="0.3289%" height="15" fill="rgb(216,154,8)" fg:x="98" fg:w="1"/><text x="32.4868%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.33%)</title><rect x="32.2368%" y="469" width="0.3289%" height="15" fill="rgb(244,35,45)" fg:x="98" fg:w="1"/><text x="32.4868%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.33%)</title><rect x="32.2368%" y="453" width="0.3289%" height="15" fill="rgb(251,115,12)" fg:x="98" fg:w="1"/><text x="32.4868%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.33%)</title><rect x="32.2368%" y="437" width="0.3289%" height="15" fill="rgb(240,54,50)" fg:x="98" fg:w="1"/><text x="32.4868%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.33%)</title><rect x="32.2368%" y="421" width="0.3289%" height="15" fill="rgb(233,84,52)" fg:x="98" fg:w="1"/><text x="32.4868%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.33%)</title><rect x="32.2368%" y="405" width="0.3289%" height="15" fill="rgb(207,117,47)" fg:x="98" fg:w="1"/><text x="32.4868%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.33%)</title><rect x="32.2368%" y="389" width="0.3289%" height="15" fill="rgb(249,43,39)" fg:x="98" fg:w="1"/><text x="32.4868%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.33%)</title><rect x="32.2368%" y="373" width="0.3289%" height="15" fill="rgb(209,38,44)" fg:x="98" fg:w="1"/><text x="32.4868%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.33%)</title><rect x="32.2368%" y="357" width="0.3289%" height="15" fill="rgb(236,212,23)" fg:x="98" fg:w="1"/><text x="32.4868%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.33%)</title><rect x="32.2368%" y="341" width="0.3289%" height="15" fill="rgb(242,79,21)" fg:x="98" fg:w="1"/><text x="32.4868%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.33%)</title><rect x="32.2368%" y="325" width="0.3289%" height="15" fill="rgb(211,96,35)" fg:x="98" fg:w="1"/><text x="32.4868%" y="335.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.33%)</title><rect x="32.2368%" y="309" width="0.3289%" height="15" fill="rgb(253,215,40)" fg:x="98" fg:w="1"/><text x="32.4868%" y="319.50"></text></g><g><title>_int_malloc (1 samples, 0.33%)</title><rect x="32.2368%" y="293" width="0.3289%" height="15" fill="rgb(211,81,21)" fg:x="98" fg:w="1"/><text x="32.4868%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.66%)</title><rect x="32.2368%" y="549" width="0.6579%" height="15" fill="rgb(208,190,38)" fg:x="98" fg:w="2"/><text x="32.4868%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.66%)</title><rect x="32.2368%" y="533" width="0.6579%" height="15" fill="rgb(235,213,38)" fg:x="98" fg:w="2"/><text x="32.4868%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.66%)</title><rect x="32.2368%" y="517" width="0.6579%" height="15" fill="rgb(237,122,38)" fg:x="98" fg:w="2"/><text x="32.4868%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.66%)</title><rect x="32.2368%" y="501" width="0.6579%" height="15" fill="rgb(244,218,35)" fg:x="98" fg:w="2"/><text x="32.4868%" y="511.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.33%)</title><rect x="32.5658%" y="485" width="0.3289%" height="15" fill="rgb(240,68,47)" fg:x="99" fg:w="1"/><text x="32.8158%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.33%)</title><rect x="32.8947%" y="469" width="0.3289%" height="15" fill="rgb(210,16,53)" fg:x="100" fg:w="1"/><text x="33.1447%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.33%)</title><rect x="32.8947%" y="453" width="0.3289%" height="15" fill="rgb(235,124,12)" fg:x="100" fg:w="1"/><text x="33.1447%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.33%)</title><rect x="32.8947%" y="437" width="0.3289%" height="15" fill="rgb(224,169,11)" fg:x="100" fg:w="1"/><text x="33.1447%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.33%)</title><rect x="32.8947%" y="421" width="0.3289%" height="15" fill="rgb(250,166,2)" fg:x="100" fg:w="1"/><text x="33.1447%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.33%)</title><rect x="32.8947%" y="405" width="0.3289%" height="15" fill="rgb(242,216,29)" fg:x="100" fg:w="1"/><text x="33.1447%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.33%)</title><rect x="32.8947%" y="389" width="0.3289%" height="15" fill="rgb(230,116,27)" fg:x="100" fg:w="1"/><text x="33.1447%" y="399.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.33%)</title><rect x="32.8947%" y="373" width="0.3289%" height="15" fill="rgb(228,99,48)" fg:x="100" fg:w="1"/><text x="33.1447%" y="383.50"></text></g><g><title>_int_malloc (1 samples, 0.33%)</title><rect x="32.8947%" y="357" width="0.3289%" height="15" fill="rgb(253,11,6)" fg:x="100" fg:w="1"/><text x="33.1447%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="32.8947%" y="341" width="0.3289%" height="15" fill="rgb(247,143,39)" fg:x="100" fg:w="1"/><text x="33.1447%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="32.8947%" y="325" width="0.3289%" height="15" fill="rgb(236,97,10)" fg:x="100" fg:w="1"/><text x="33.1447%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="32.8947%" y="309" width="0.3289%" height="15" fill="rgb(233,208,19)" fg:x="100" fg:w="1"/><text x="33.1447%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="32.8947%" y="293" width="0.3289%" height="15" fill="rgb(216,164,2)" fg:x="100" fg:w="1"/><text x="33.1447%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="32.8947%" y="277" width="0.3289%" height="15" fill="rgb(220,129,5)" fg:x="100" fg:w="1"/><text x="33.1447%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="32.8947%" y="261" width="0.3289%" height="15" fill="rgb(242,17,10)" fg:x="100" fg:w="1"/><text x="33.1447%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="32.8947%" y="245" width="0.3289%" height="15" fill="rgb(242,107,0)" fg:x="100" fg:w="1"/><text x="33.1447%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="32.8947%" y="229" width="0.3289%" height="15" fill="rgb(251,28,31)" fg:x="100" fg:w="1"/><text x="33.1447%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="32.8947%" y="213" width="0.3289%" height="15" fill="rgb(233,223,10)" fg:x="100" fg:w="1"/><text x="33.1447%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="32.8947%" y="197" width="0.3289%" height="15" fill="rgb(215,21,27)" fg:x="100" fg:w="1"/><text x="33.1447%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="32.8947%" y="181" width="0.3289%" height="15" fill="rgb(232,23,21)" fg:x="100" fg:w="1"/><text x="33.1447%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="32.8947%" y="165" width="0.3289%" height="15" fill="rgb(244,5,23)" fg:x="100" fg:w="1"/><text x="33.1447%" y="175.50"></text></g><g><title>&lt;lab4::checksum::Checksum as core::clone::Clone&gt;::clone (2 samples, 0.66%)</title><rect x="32.8947%" y="549" width="0.6579%" height="15" fill="rgb(226,81,46)" fg:x="100" fg:w="2"/><text x="33.1447%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.66%)</title><rect x="32.8947%" y="533" width="0.6579%" height="15" fill="rgb(247,70,30)" fg:x="100" fg:w="2"/><text x="33.1447%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.66%)</title><rect x="32.8947%" y="517" width="0.6579%" height="15" fill="rgb(212,68,19)" fg:x="100" fg:w="2"/><text x="33.1447%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.66%)</title><rect x="32.8947%" y="501" width="0.6579%" height="15" fill="rgb(240,187,13)" fg:x="100" fg:w="2"/><text x="33.1447%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.66%)</title><rect x="32.8947%" y="485" width="0.6579%" height="15" fill="rgb(223,113,26)" fg:x="100" fg:w="2"/><text x="33.1447%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.33%)</title><rect x="33.2237%" y="469" width="0.3289%" height="15" fill="rgb(206,192,2)" fg:x="101" fg:w="1"/><text x="33.4737%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.33%)</title><rect x="33.2237%" y="453" width="0.3289%" height="15" fill="rgb(241,108,4)" fg:x="101" fg:w="1"/><text x="33.4737%" y="463.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.33%)</title><rect x="33.2237%" y="437" width="0.3289%" height="15" fill="rgb(247,173,49)" fg:x="101" fg:w="1"/><text x="33.4737%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;lab4::checksum::Checksum&gt;&gt;&gt; (4 samples, 1.32%)</title><rect x="33.5526%" y="549" width="1.3158%" height="15" fill="rgb(224,114,35)" fg:x="102" fg:w="4"/><text x="33.8026%" y="559.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 1.32%)</title><rect x="33.5526%" y="533" width="1.3158%" height="15" fill="rgb(245,159,27)" fg:x="102" fg:w="4"/><text x="33.8026%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (4 samples, 1.32%)</title><rect x="33.5526%" y="517" width="1.3158%" height="15" fill="rgb(245,172,44)" fg:x="102" fg:w="4"/><text x="33.8026%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (4 samples, 1.32%)</title><rect x="33.5526%" y="501" width="1.3158%" height="15" fill="rgb(236,23,11)" fg:x="102" fg:w="4"/><text x="33.8026%" y="511.50"></text></g><g><title>__GI___pthread_mutex_unlock (4 samples, 1.32%)</title><rect x="33.5526%" y="485" width="1.3158%" height="15" fill="rgb(205,117,38)" fg:x="102" fg:w="4"/><text x="33.8026%" y="495.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (4 samples, 1.32%)</title><rect x="33.5526%" y="469" width="1.3158%" height="15" fill="rgb(237,72,25)" fg:x="102" fg:w="4"/><text x="33.8026%" y="479.50"></text></g><g><title>[unknown] (4 samples, 1.32%)</title><rect x="33.5526%" y="453" width="1.3158%" height="15" fill="rgb(244,70,9)" fg:x="102" fg:w="4"/><text x="33.8026%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.99%)</title><rect x="33.8816%" y="437" width="0.9868%" height="15" fill="rgb(217,125,39)" fg:x="103" fg:w="3"/><text x="34.1316%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.99%)</title><rect x="33.8816%" y="421" width="0.9868%" height="15" fill="rgb(235,36,10)" fg:x="103" fg:w="3"/><text x="34.1316%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="34.5395%" y="405" width="0.3289%" height="15" fill="rgb(251,123,47)" fg:x="105" fg:w="1"/><text x="34.7895%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="34.5395%" y="389" width="0.3289%" height="15" fill="rgb(221,13,13)" fg:x="105" fg:w="1"/><text x="34.7895%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6 samples, 1.97%)</title><rect x="34.8684%" y="501" width="1.9737%" height="15" fill="rgb(238,131,9)" fg:x="106" fg:w="6"/><text x="35.1184%" y="511.50">a..</text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 1.97%)</title><rect x="34.8684%" y="485" width="1.9737%" height="15" fill="rgb(211,50,8)" fg:x="106" fg:w="6"/><text x="35.1184%" y="495.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 1.97%)</title><rect x="34.8684%" y="469" width="1.9737%" height="15" fill="rgb(245,182,24)" fg:x="106" fg:w="6"/><text x="35.1184%" y="479.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 1.97%)</title><rect x="34.8684%" y="453" width="1.9737%" height="15" fill="rgb(242,14,37)" fg:x="106" fg:w="6"/><text x="35.1184%" y="463.50">a..</text></g><g><title>alloc::alloc::alloc (6 samples, 1.97%)</title><rect x="34.8684%" y="437" width="1.9737%" height="15" fill="rgb(246,228,12)" fg:x="106" fg:w="6"/><text x="35.1184%" y="447.50">a..</text></g><g><title>__GI___libc_malloc (6 samples, 1.97%)</title><rect x="34.8684%" y="421" width="1.9737%" height="15" fill="rgb(213,55,15)" fg:x="106" fg:w="6"/><text x="35.1184%" y="431.50">_..</text></g><g><title>_int_malloc (6 samples, 1.97%)</title><rect x="34.8684%" y="405" width="1.9737%" height="15" fill="rgb(209,9,3)" fg:x="106" fg:w="6"/><text x="35.1184%" y="415.50">_..</text></g><g><title>[unknown] (6 samples, 1.97%)</title><rect x="34.8684%" y="389" width="1.9737%" height="15" fill="rgb(230,59,30)" fg:x="106" fg:w="6"/><text x="35.1184%" y="399.50">[..</text></g><g><title>[unknown] (6 samples, 1.97%)</title><rect x="34.8684%" y="373" width="1.9737%" height="15" fill="rgb(209,121,21)" fg:x="106" fg:w="6"/><text x="35.1184%" y="383.50">[..</text></g><g><title>[unknown] (6 samples, 1.97%)</title><rect x="34.8684%" y="357" width="1.9737%" height="15" fill="rgb(220,109,13)" fg:x="106" fg:w="6"/><text x="35.1184%" y="367.50">[..</text></g><g><title>[unknown] (6 samples, 1.97%)</title><rect x="34.8684%" y="341" width="1.9737%" height="15" fill="rgb(232,18,1)" fg:x="106" fg:w="6"/><text x="35.1184%" y="351.50">[..</text></g><g><title>[unknown] (6 samples, 1.97%)</title><rect x="34.8684%" y="325" width="1.9737%" height="15" fill="rgb(215,41,42)" fg:x="106" fg:w="6"/><text x="35.1184%" y="335.50">[..</text></g><g><title>[unknown] (6 samples, 1.97%)</title><rect x="34.8684%" y="309" width="1.9737%" height="15" fill="rgb(224,123,36)" fg:x="106" fg:w="6"/><text x="35.1184%" y="319.50">[..</text></g><g><title>[unknown] (6 samples, 1.97%)</title><rect x="34.8684%" y="293" width="1.9737%" height="15" fill="rgb(240,125,3)" fg:x="106" fg:w="6"/><text x="35.1184%" y="303.50">[..</text></g><g><title>[unknown] (6 samples, 1.97%)</title><rect x="34.8684%" y="277" width="1.9737%" height="15" fill="rgb(205,98,50)" fg:x="106" fg:w="6"/><text x="35.1184%" y="287.50">[..</text></g><g><title>[unknown] (5 samples, 1.64%)</title><rect x="35.1974%" y="261" width="1.6447%" height="15" fill="rgb(205,185,37)" fg:x="107" fg:w="5"/><text x="35.4474%" y="271.50"></text></g><g><title>[unknown] (5 samples, 1.64%)</title><rect x="35.1974%" y="245" width="1.6447%" height="15" fill="rgb(238,207,15)" fg:x="107" fg:w="5"/><text x="35.4474%" y="255.50"></text></g><g><title>[unknown] (5 samples, 1.64%)</title><rect x="35.1974%" y="229" width="1.6447%" height="15" fill="rgb(213,199,42)" fg:x="107" fg:w="5"/><text x="35.4474%" y="239.50"></text></g><g><title>[unknown] (5 samples, 1.64%)</title><rect x="35.1974%" y="213" width="1.6447%" height="15" fill="rgb(235,201,11)" fg:x="107" fg:w="5"/><text x="35.4474%" y="223.50"></text></g><g><title>[unknown] (5 samples, 1.64%)</title><rect x="35.1974%" y="197" width="1.6447%" height="15" fill="rgb(207,46,11)" fg:x="107" fg:w="5"/><text x="35.4474%" y="207.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.33%)</title><rect x="36.8421%" y="485" width="0.3289%" height="15" fill="rgb(241,35,35)" fg:x="112" fg:w="1"/><text x="37.0921%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.33%)</title><rect x="36.8421%" y="469" width="0.3289%" height="15" fill="rgb(243,32,47)" fg:x="112" fg:w="1"/><text x="37.0921%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (1 samples, 0.33%)</title><rect x="36.8421%" y="453" width="0.3289%" height="15" fill="rgb(247,202,23)" fg:x="112" fg:w="1"/><text x="37.0921%" y="463.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (10 samples, 3.29%)</title><rect x="34.8684%" y="517" width="3.2895%" height="15" fill="rgb(219,102,11)" fg:x="106" fg:w="10"/><text x="35.1184%" y="527.50">cro..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (4 samples, 1.32%)</title><rect x="36.8421%" y="501" width="1.3158%" height="15" fill="rgb(243,110,44)" fg:x="112" fg:w="4"/><text x="37.0921%" y="511.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (3 samples, 0.99%)</title><rect x="37.1711%" y="485" width="0.9868%" height="15" fill="rgb(222,74,54)" fg:x="113" fg:w="3"/><text x="37.4211%" y="495.50"></text></g><g><title>core::hint::spin_loop (3 samples, 0.99%)</title><rect x="37.1711%" y="469" width="0.9868%" height="15" fill="rgb(216,99,12)" fg:x="113" fg:w="3"/><text x="37.4211%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (3 samples, 0.99%)</title><rect x="37.1711%" y="453" width="0.9868%" height="15" fill="rgb(226,22,26)" fg:x="113" fg:w="3"/><text x="37.4211%" y="463.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (12 samples, 3.95%)</title><rect x="34.8684%" y="549" width="3.9474%" height="15" fill="rgb(217,163,10)" fg:x="106" fg:w="12"/><text x="35.1184%" y="559.50">cros..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (12 samples, 3.95%)</title><rect x="34.8684%" y="533" width="3.9474%" height="15" fill="rgb(213,25,53)" fg:x="106" fg:w="12"/><text x="35.1184%" y="543.50">cros..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (2 samples, 0.66%)</title><rect x="38.1579%" y="517" width="0.6579%" height="15" fill="rgb(252,105,26)" fg:x="116" fg:w="2"/><text x="38.4079%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (2 samples, 0.66%)</title><rect x="38.1579%" y="501" width="0.6579%" height="15" fill="rgb(220,39,43)" fg:x="116" fg:w="2"/><text x="38.4079%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_or (2 samples, 0.66%)</title><rect x="38.1579%" y="485" width="0.6579%" height="15" fill="rgb(229,68,48)" fg:x="116" fg:w="2"/><text x="38.4079%" y="495.50"></text></g><g><title>lab4::package::PackageDownloader::run (54 samples, 17.76%)</title><rect x="31.5789%" y="565" width="17.7632%" height="15" fill="rgb(252,8,32)" fg:x="96" fg:w="54"/><text x="31.8289%" y="575.50">lab4::package::PackageDownlo..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (32 samples, 10.53%)</title><rect x="38.8158%" y="549" width="10.5263%" height="15" fill="rgb(223,20,43)" fg:x="118" fg:w="32"/><text x="39.0658%" y="559.50">std::sync::mute..</text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (32 samples, 10.53%)</title><rect x="38.8158%" y="533" width="10.5263%" height="15" fill="rgb(229,81,49)" fg:x="118" fg:w="32"/><text x="39.0658%" y="543.50">std::sys_common..</text></g><g><title>std::sys::unix::mutex::Mutex::lock (32 samples, 10.53%)</title><rect x="38.8158%" y="517" width="10.5263%" height="15" fill="rgb(236,28,36)" fg:x="118" fg:w="32"/><text x="39.0658%" y="527.50">std::sys::unix:..</text></g><g><title>__GI___pthread_mutex_lock (32 samples, 10.53%)</title><rect x="38.8158%" y="501" width="10.5263%" height="15" fill="rgb(249,185,26)" fg:x="118" fg:w="32"/><text x="39.0658%" y="511.50">__GI___pthread_..</text></g><g><title>__lll_lock_wait (32 samples, 10.53%)</title><rect x="38.8158%" y="485" width="10.5263%" height="15" fill="rgb(249,174,33)" fg:x="118" fg:w="32"/><text x="39.0658%" y="495.50">__lll_lock_wait</text></g><g><title>[unknown] (32 samples, 10.53%)</title><rect x="38.8158%" y="469" width="10.5263%" height="15" fill="rgb(233,201,37)" fg:x="118" fg:w="32"/><text x="39.0658%" y="479.50">[unknown]</text></g><g><title>[unknown] (32 samples, 10.53%)</title><rect x="38.8158%" y="453" width="10.5263%" height="15" fill="rgb(221,78,26)" fg:x="118" fg:w="32"/><text x="39.0658%" y="463.50">[unknown]</text></g><g><title>[unknown] (32 samples, 10.53%)</title><rect x="38.8158%" y="437" width="10.5263%" height="15" fill="rgb(250,127,30)" fg:x="118" fg:w="32"/><text x="39.0658%" y="447.50">[unknown]</text></g><g><title>[unknown] (32 samples, 10.53%)</title><rect x="38.8158%" y="421" width="10.5263%" height="15" fill="rgb(230,49,44)" fg:x="118" fg:w="32"/><text x="39.0658%" y="431.50">[unknown]</text></g><g><title>[unknown] (31 samples, 10.20%)</title><rect x="39.1447%" y="405" width="10.1974%" height="15" fill="rgb(229,67,23)" fg:x="119" fg:w="31"/><text x="39.3947%" y="415.50">[unknown]</text></g><g><title>[unknown] (30 samples, 9.87%)</title><rect x="39.4737%" y="389" width="9.8684%" height="15" fill="rgb(249,83,47)" fg:x="120" fg:w="30"/><text x="39.7237%" y="399.50">[unknown]</text></g><g><title>[unknown] (30 samples, 9.87%)</title><rect x="39.4737%" y="373" width="9.8684%" height="15" fill="rgb(215,43,3)" fg:x="120" fg:w="30"/><text x="39.7237%" y="383.50">[unknown]</text></g><g><title>[unknown] (30 samples, 9.87%)</title><rect x="39.4737%" y="357" width="9.8684%" height="15" fill="rgb(238,154,13)" fg:x="120" fg:w="30"/><text x="39.7237%" y="367.50">[unknown]</text></g><g><title>[unknown] (30 samples, 9.87%)</title><rect x="39.4737%" y="341" width="9.8684%" height="15" fill="rgb(219,56,2)" fg:x="120" fg:w="30"/><text x="39.7237%" y="351.50">[unknown]</text></g><g><title>[unknown] (30 samples, 9.87%)</title><rect x="39.4737%" y="325" width="9.8684%" height="15" fill="rgb(233,0,4)" fg:x="120" fg:w="30"/><text x="39.7237%" y="335.50">[unknown]</text></g><g><title>[unknown] (30 samples, 9.87%)</title><rect x="39.4737%" y="309" width="9.8684%" height="15" fill="rgb(235,30,7)" fg:x="120" fg:w="30"/><text x="39.7237%" y="319.50">[unknown]</text></g><g><title>[unknown] (30 samples, 9.87%)</title><rect x="39.4737%" y="293" width="9.8684%" height="15" fill="rgb(250,79,13)" fg:x="120" fg:w="30"/><text x="39.7237%" y="303.50">[unknown]</text></g><g><title>[unknown] (30 samples, 9.87%)</title><rect x="39.4737%" y="277" width="9.8684%" height="15" fill="rgb(211,146,34)" fg:x="120" fg:w="30"/><text x="39.7237%" y="287.50">[unknown]</text></g><g><title>[unknown] (30 samples, 9.87%)</title><rect x="39.4737%" y="261" width="9.8684%" height="15" fill="rgb(228,22,38)" fg:x="120" fg:w="30"/><text x="39.7237%" y="271.50">[unknown]</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.33%)</title><rect x="49.6711%" y="549" width="0.3289%" height="15" fill="rgb(235,168,5)" fg:x="151" fg:w="1"/><text x="49.9211%" y="559.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.33%)</title><rect x="50.0000%" y="533" width="0.3289%" height="15" fill="rgb(221,155,16)" fg:x="152" fg:w="1"/><text x="50.2500%" y="543.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.33%)</title><rect x="50.0000%" y="517" width="0.3289%" height="15" fill="rgb(215,215,53)" fg:x="152" fg:w="1"/><text x="50.2500%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="50.0000%" y="501" width="0.3289%" height="15" fill="rgb(223,4,10)" fg:x="152" fg:w="1"/><text x="50.2500%" y="511.50"></text></g><g><title>alloc::fmt::format (4 samples, 1.32%)</title><rect x="50.3289%" y="533" width="1.3158%" height="15" fill="rgb(234,103,6)" fg:x="153" fg:w="4"/><text x="50.5789%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 1.32%)</title><rect x="50.3289%" y="517" width="1.3158%" height="15" fill="rgb(227,97,0)" fg:x="153" fg:w="4"/><text x="50.5789%" y="527.50"></text></g><g><title>core::fmt::write (3 samples, 0.99%)</title><rect x="50.6579%" y="501" width="0.9868%" height="15" fill="rgb(234,150,53)" fg:x="154" fg:w="3"/><text x="50.9079%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.99%)</title><rect x="50.6579%" y="485" width="0.9868%" height="15" fill="rgb(228,201,54)" fg:x="154" fg:w="3"/><text x="50.9079%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.99%)</title><rect x="50.6579%" y="469" width="0.9868%" height="15" fill="rgb(222,22,37)" fg:x="154" fg:w="3"/><text x="50.9079%" y="479.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.99%)</title><rect x="50.6579%" y="453" width="0.9868%" height="15" fill="rgb(237,53,32)" fg:x="154" fg:w="3"/><text x="50.9079%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.99%)</title><rect x="50.6579%" y="437" width="0.9868%" height="15" fill="rgb(233,25,53)" fg:x="154" fg:w="3"/><text x="50.9079%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.99%)</title><rect x="50.6579%" y="421" width="0.9868%" height="15" fill="rgb(210,40,34)" fg:x="154" fg:w="3"/><text x="50.9079%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.99%)</title><rect x="50.6579%" y="405" width="0.9868%" height="15" fill="rgb(241,220,44)" fg:x="154" fg:w="3"/><text x="50.9079%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.99%)</title><rect x="50.6579%" y="389" width="0.9868%" height="15" fill="rgb(235,28,35)" fg:x="154" fg:w="3"/><text x="50.9079%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.99%)</title><rect x="50.6579%" y="373" width="0.9868%" height="15" fill="rgb(210,56,17)" fg:x="154" fg:w="3"/><text x="50.9079%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.99%)</title><rect x="50.6579%" y="357" width="0.9868%" height="15" fill="rgb(224,130,29)" fg:x="154" fg:w="3"/><text x="50.9079%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.99%)</title><rect x="50.6579%" y="341" width="0.9868%" height="15" fill="rgb(235,212,8)" fg:x="154" fg:w="3"/><text x="50.9079%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.99%)</title><rect x="50.6579%" y="325" width="0.9868%" height="15" fill="rgb(223,33,50)" fg:x="154" fg:w="3"/><text x="50.9079%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.99%)</title><rect x="50.6579%" y="309" width="0.9868%" height="15" fill="rgb(219,149,13)" fg:x="154" fg:w="3"/><text x="50.9079%" y="319.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.99%)</title><rect x="50.6579%" y="293" width="0.9868%" height="15" fill="rgb(250,156,29)" fg:x="154" fg:w="3"/><text x="50.9079%" y="303.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.99%)</title><rect x="50.6579%" y="277" width="0.9868%" height="15" fill="rgb(216,193,19)" fg:x="154" fg:w="3"/><text x="50.9079%" y="287.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.99%)</title><rect x="50.6579%" y="261" width="0.9868%" height="15" fill="rgb(216,135,14)" fg:x="154" fg:w="3"/><text x="50.9079%" y="271.50"></text></g><g><title>__lll_lock_wait_private (2 samples, 0.66%)</title><rect x="50.9868%" y="245" width="0.6579%" height="15" fill="rgb(241,47,5)" fg:x="155" fg:w="2"/><text x="51.2368%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="50.9868%" y="229" width="0.6579%" height="15" fill="rgb(233,42,35)" fg:x="155" fg:w="2"/><text x="51.2368%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="50.9868%" y="213" width="0.6579%" height="15" fill="rgb(231,13,6)" fg:x="155" fg:w="2"/><text x="51.2368%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="50.9868%" y="197" width="0.6579%" height="15" fill="rgb(207,181,40)" fg:x="155" fg:w="2"/><text x="51.2368%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="51.3158%" y="181" width="0.3289%" height="15" fill="rgb(254,173,49)" fg:x="156" fg:w="1"/><text x="51.5658%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="51.3158%" y="165" width="0.3289%" height="15" fill="rgb(221,1,38)" fg:x="156" fg:w="1"/><text x="51.5658%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="51.3158%" y="149" width="0.3289%" height="15" fill="rgb(206,124,46)" fg:x="156" fg:w="1"/><text x="51.5658%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="51.3158%" y="133" width="0.3289%" height="15" fill="rgb(249,21,11)" fg:x="156" fg:w="1"/><text x="51.5658%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="51.3158%" y="117" width="0.3289%" height="15" fill="rgb(222,201,40)" fg:x="156" fg:w="1"/><text x="51.5658%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="51.3158%" y="101" width="0.3289%" height="15" fill="rgb(235,61,29)" fg:x="156" fg:w="1"/><text x="51.5658%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="51.3158%" y="85" width="0.3289%" height="15" fill="rgb(219,207,3)" fg:x="156" fg:w="1"/><text x="51.5658%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="51.3158%" y="69" width="0.3289%" height="15" fill="rgb(222,56,46)" fg:x="156" fg:w="1"/><text x="51.5658%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.33%)</title><rect x="51.6447%" y="533" width="0.3289%" height="15" fill="rgb(239,76,54)" fg:x="157" fg:w="1"/><text x="51.8947%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.33%)</title><rect x="51.6447%" y="517" width="0.3289%" height="15" fill="rgb(231,124,27)" fg:x="157" fg:w="1"/><text x="51.8947%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.33%)</title><rect x="51.6447%" y="501" width="0.3289%" height="15" fill="rgb(249,195,6)" fg:x="157" fg:w="1"/><text x="51.8947%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.33%)</title><rect x="51.6447%" y="485" width="0.3289%" height="15" fill="rgb(237,174,47)" fg:x="157" fg:w="1"/><text x="51.8947%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.33%)</title><rect x="51.6447%" y="469" width="0.3289%" height="15" fill="rgb(206,201,31)" fg:x="157" fg:w="1"/><text x="51.8947%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.33%)</title><rect x="51.6447%" y="453" width="0.3289%" height="15" fill="rgb(231,57,52)" fg:x="157" fg:w="1"/><text x="51.8947%" y="463.50"></text></g><g><title>_int_free (1 samples, 0.33%)</title><rect x="51.6447%" y="437" width="0.3289%" height="15" fill="rgb(248,177,22)" fg:x="157" fg:w="1"/><text x="51.8947%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;lab4::package::Package&gt; (1 samples, 0.33%)</title><rect x="51.9737%" y="533" width="0.3289%" height="15" fill="rgb(215,211,37)" fg:x="158" fg:w="1"/><text x="52.2237%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.33%)</title><rect x="51.9737%" y="517" width="0.3289%" height="15" fill="rgb(241,128,51)" fg:x="158" fg:w="1"/><text x="52.2237%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.33%)</title><rect x="51.9737%" y="501" width="0.3289%" height="15" fill="rgb(227,165,31)" fg:x="158" fg:w="1"/><text x="52.2237%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.33%)</title><rect x="51.9737%" y="485" width="0.3289%" height="15" fill="rgb(228,167,24)" fg:x="158" fg:w="1"/><text x="52.2237%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.33%)</title><rect x="51.9737%" y="469" width="0.3289%" height="15" fill="rgb(228,143,12)" fg:x="158" fg:w="1"/><text x="52.2237%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.33%)</title><rect x="51.9737%" y="453" width="0.3289%" height="15" fill="rgb(249,149,8)" fg:x="158" fg:w="1"/><text x="52.2237%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.33%)</title><rect x="51.9737%" y="437" width="0.3289%" height="15" fill="rgb(243,35,44)" fg:x="158" fg:w="1"/><text x="52.2237%" y="447.50"></text></g><g><title>_int_free (1 samples, 0.33%)</title><rect x="51.9737%" y="421" width="0.3289%" height="15" fill="rgb(246,89,9)" fg:x="158" fg:w="1"/><text x="52.2237%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.33%)</title><rect x="52.3026%" y="533" width="0.3289%" height="15" fill="rgb(233,213,13)" fg:x="159" fg:w="1"/><text x="52.5526%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.33%)</title><rect x="52.3026%" y="517" width="0.3289%" height="15" fill="rgb(233,141,41)" fg:x="159" fg:w="1"/><text x="52.5526%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.33%)</title><rect x="52.3026%" y="501" width="0.3289%" height="15" fill="rgb(239,167,4)" fg:x="159" fg:w="1"/><text x="52.5526%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.33%)</title><rect x="52.3026%" y="485" width="0.3289%" height="15" fill="rgb(209,217,16)" fg:x="159" fg:w="1"/><text x="52.5526%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.33%)</title><rect x="52.3026%" y="469" width="0.3289%" height="15" fill="rgb(219,88,35)" fg:x="159" fg:w="1"/><text x="52.5526%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.33%)</title><rect x="52.3026%" y="453" width="0.3289%" height="15" fill="rgb(220,193,23)" fg:x="159" fg:w="1"/><text x="52.5526%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.33%)</title><rect x="52.3026%" y="437" width="0.3289%" height="15" fill="rgb(230,90,52)" fg:x="159" fg:w="1"/><text x="52.5526%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.33%)</title><rect x="52.3026%" y="421" width="0.3289%" height="15" fill="rgb(252,106,19)" fg:x="159" fg:w="1"/><text x="52.5526%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.33%)</title><rect x="52.3026%" y="405" width="0.3289%" height="15" fill="rgb(206,74,20)" fg:x="159" fg:w="1"/><text x="52.5526%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.33%)</title><rect x="52.3026%" y="389" width="0.3289%" height="15" fill="rgb(230,138,44)" fg:x="159" fg:w="1"/><text x="52.5526%" y="399.50"></text></g><g><title>std::io::Write::write_fmt (11 samples, 3.62%)</title><rect x="52.6316%" y="533" width="3.6184%" height="15" fill="rgb(235,182,43)" fg:x="160" fg:w="11"/><text x="52.8816%" y="543.50">std:..</text></g><g><title>core::fmt::write (11 samples, 3.62%)</title><rect x="52.6316%" y="517" width="3.6184%" height="15" fill="rgb(242,16,51)" fg:x="160" fg:w="11"/><text x="52.8816%" y="527.50">core..</text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (11 samples, 3.62%)</title><rect x="52.6316%" y="501" width="3.6184%" height="15" fill="rgb(248,9,4)" fg:x="160" fg:w="11"/><text x="52.8816%" y="511.50">&lt;std..</text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (11 samples, 3.62%)</title><rect x="52.6316%" y="485" width="3.6184%" height="15" fill="rgb(210,31,22)" fg:x="160" fg:w="11"/><text x="52.8816%" y="495.50">&lt;std..</text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (11 samples, 3.62%)</title><rect x="52.6316%" y="469" width="3.6184%" height="15" fill="rgb(239,54,39)" fg:x="160" fg:w="11"/><text x="52.8816%" y="479.50">&lt;std..</text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (11 samples, 3.62%)</title><rect x="52.6316%" y="453" width="3.6184%" height="15" fill="rgb(230,99,41)" fg:x="160" fg:w="11"/><text x="52.8816%" y="463.50">&lt;std..</text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (11 samples, 3.62%)</title><rect x="52.6316%" y="437" width="3.6184%" height="15" fill="rgb(253,106,12)" fg:x="160" fg:w="11"/><text x="52.8816%" y="447.50">&lt;std..</text></g><g><title>std::io::Write::write_all (11 samples, 3.62%)</title><rect x="52.6316%" y="421" width="3.6184%" height="15" fill="rgb(213,46,41)" fg:x="160" fg:w="11"/><text x="52.8816%" y="431.50">std:..</text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (11 samples, 3.62%)</title><rect x="52.6316%" y="405" width="3.6184%" height="15" fill="rgb(215,133,35)" fg:x="160" fg:w="11"/><text x="52.8816%" y="415.50">&lt;std..</text></g><g><title>std::sys::unix::fd::FileDesc::write (11 samples, 3.62%)</title><rect x="52.6316%" y="389" width="3.6184%" height="15" fill="rgb(213,28,5)" fg:x="160" fg:w="11"/><text x="52.8816%" y="399.50">std:..</text></g><g><title>__libc_write (11 samples, 3.62%)</title><rect x="52.6316%" y="373" width="3.6184%" height="15" fill="rgb(215,77,49)" fg:x="160" fg:w="11"/><text x="52.8816%" y="383.50">__li..</text></g><g><title>__libc_write (11 samples, 3.62%)</title><rect x="52.6316%" y="357" width="3.6184%" height="15" fill="rgb(248,100,22)" fg:x="160" fg:w="11"/><text x="52.8816%" y="367.50">__li..</text></g><g><title>[unknown] (11 samples, 3.62%)</title><rect x="52.6316%" y="341" width="3.6184%" height="15" fill="rgb(208,67,9)" fg:x="160" fg:w="11"/><text x="52.8816%" y="351.50">[unk..</text></g><g><title>[unknown] (11 samples, 3.62%)</title><rect x="52.6316%" y="325" width="3.6184%" height="15" fill="rgb(219,133,21)" fg:x="160" fg:w="11"/><text x="52.8816%" y="335.50">[unk..</text></g><g><title>[unknown] (11 samples, 3.62%)</title><rect x="52.6316%" y="309" width="3.6184%" height="15" fill="rgb(246,46,29)" fg:x="160" fg:w="11"/><text x="52.8816%" y="319.50">[unk..</text></g><g><title>[unknown] (11 samples, 3.62%)</title><rect x="52.6316%" y="293" width="3.6184%" height="15" fill="rgb(246,185,52)" fg:x="160" fg:w="11"/><text x="52.8816%" y="303.50">[unk..</text></g><g><title>[unknown] (11 samples, 3.62%)</title><rect x="52.6316%" y="277" width="3.6184%" height="15" fill="rgb(252,136,11)" fg:x="160" fg:w="11"/><text x="52.8816%" y="287.50">[unk..</text></g><g><title>[unknown] (11 samples, 3.62%)</title><rect x="52.6316%" y="261" width="3.6184%" height="15" fill="rgb(219,138,53)" fg:x="160" fg:w="11"/><text x="52.8816%" y="271.50">[unk..</text></g><g><title>[unknown] (11 samples, 3.62%)</title><rect x="52.6316%" y="245" width="3.6184%" height="15" fill="rgb(211,51,23)" fg:x="160" fg:w="11"/><text x="52.8816%" y="255.50">[unk..</text></g><g><title>[unknown] (11 samples, 3.62%)</title><rect x="52.6316%" y="229" width="3.6184%" height="15" fill="rgb(247,221,28)" fg:x="160" fg:w="11"/><text x="52.8816%" y="239.50">[unk..</text></g><g><title>[unknown] (10 samples, 3.29%)</title><rect x="52.9605%" y="213" width="3.2895%" height="15" fill="rgb(251,222,45)" fg:x="161" fg:w="10"/><text x="53.2105%" y="223.50">[un..</text></g><g><title>[unknown] (9 samples, 2.96%)</title><rect x="53.2895%" y="197" width="2.9605%" height="15" fill="rgb(217,162,53)" fg:x="162" fg:w="9"/><text x="53.5395%" y="207.50">[un..</text></g><g><title>[unknown] (9 samples, 2.96%)</title><rect x="53.2895%" y="181" width="2.9605%" height="15" fill="rgb(229,93,14)" fg:x="162" fg:w="9"/><text x="53.5395%" y="191.50">[un..</text></g><g><title>[unknown] (9 samples, 2.96%)</title><rect x="53.2895%" y="165" width="2.9605%" height="15" fill="rgb(209,67,49)" fg:x="162" fg:w="9"/><text x="53.5395%" y="175.50">[un..</text></g><g><title>[unknown] (6 samples, 1.97%)</title><rect x="54.2763%" y="149" width="1.9737%" height="15" fill="rgb(213,87,29)" fg:x="165" fg:w="6"/><text x="54.5263%" y="159.50">[..</text></g><g><title>[unknown] (5 samples, 1.64%)</title><rect x="54.6053%" y="133" width="1.6447%" height="15" fill="rgb(205,151,52)" fg:x="166" fg:w="5"/><text x="54.8553%" y="143.50"></text></g><g><title>[unknown] (3 samples, 0.99%)</title><rect x="55.2632%" y="117" width="0.9868%" height="15" fill="rgb(253,215,39)" fg:x="168" fg:w="3"/><text x="55.5132%" y="127.50"></text></g><g><title>[unknown] (3 samples, 0.99%)</title><rect x="55.2632%" y="101" width="0.9868%" height="15" fill="rgb(221,220,41)" fg:x="168" fg:w="3"/><text x="55.5132%" y="111.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="55.5921%" y="85" width="0.6579%" height="15" fill="rgb(218,133,21)" fg:x="169" fg:w="2"/><text x="55.8421%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="55.9211%" y="69" width="0.3289%" height="15" fill="rgb(221,193,43)" fg:x="170" fg:w="1"/><text x="56.1711%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="55.9211%" y="53" width="0.3289%" height="15" fill="rgb(240,128,52)" fg:x="170" fg:w="1"/><text x="56.1711%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="55.9211%" y="37" width="0.3289%" height="15" fill="rgb(253,114,12)" fg:x="170" fg:w="1"/><text x="56.1711%" y="47.50"></text></g><g><title>lab4::student::Student::build_idea (75 samples, 24.67%)</title><rect x="50.0000%" y="549" width="24.6711%" height="15" fill="rgb(215,223,47)" fg:x="152" fg:w="75"/><text x="50.2500%" y="559.50">lab4::student::Student::build_idea</text></g><g><title>std::io::stdio::Stdout::lock (56 samples, 18.42%)</title><rect x="56.2500%" y="533" width="18.4211%" height="15" fill="rgb(248,225,23)" fg:x="171" fg:w="56"/><text x="56.5000%" y="543.50">std::io::stdio::Stdout::lock</text></g><g><title>std::io::stdio::Stdout::lock_any (56 samples, 18.42%)</title><rect x="56.2500%" y="517" width="18.4211%" height="15" fill="rgb(250,108,0)" fg:x="171" fg:w="56"/><text x="56.5000%" y="527.50">std::io::stdio::Stdout::lock_..</text></g><g><title>std::sys_common::remutex::ReentrantMutex&lt;T&gt;::lock (56 samples, 18.42%)</title><rect x="56.2500%" y="501" width="18.4211%" height="15" fill="rgb(228,208,7)" fg:x="171" fg:w="56"/><text x="56.5000%" y="511.50">std::sys_common::remutex::Ree..</text></g><g><title>std::sys::unix::mutex::ReentrantMutex::lock (56 samples, 18.42%)</title><rect x="56.2500%" y="485" width="18.4211%" height="15" fill="rgb(244,45,10)" fg:x="171" fg:w="56"/><text x="56.5000%" y="495.50">std::sys::unix::mutex::Reentr..</text></g><g><title>__GI___pthread_mutex_lock (56 samples, 18.42%)</title><rect x="56.2500%" y="469" width="18.4211%" height="15" fill="rgb(207,125,25)" fg:x="171" fg:w="56"/><text x="56.5000%" y="479.50">__GI___pthread_mutex_lock</text></g><g><title>__lll_lock_wait (56 samples, 18.42%)</title><rect x="56.2500%" y="453" width="18.4211%" height="15" fill="rgb(210,195,18)" fg:x="171" fg:w="56"/><text x="56.5000%" y="463.50">__lll_lock_wait</text></g><g><title>[unknown] (56 samples, 18.42%)</title><rect x="56.2500%" y="437" width="18.4211%" height="15" fill="rgb(249,80,12)" fg:x="171" fg:w="56"/><text x="56.5000%" y="447.50">[unknown]</text></g><g><title>[unknown] (56 samples, 18.42%)</title><rect x="56.2500%" y="421" width="18.4211%" height="15" fill="rgb(221,65,9)" fg:x="171" fg:w="56"/><text x="56.5000%" y="431.50">[unknown]</text></g><g><title>[unknown] (56 samples, 18.42%)</title><rect x="56.2500%" y="405" width="18.4211%" height="15" fill="rgb(235,49,36)" fg:x="171" fg:w="56"/><text x="56.5000%" y="415.50">[unknown]</text></g><g><title>[unknown] (55 samples, 18.09%)</title><rect x="56.5789%" y="389" width="18.0921%" height="15" fill="rgb(225,32,20)" fg:x="172" fg:w="55"/><text x="56.8289%" y="399.50">[unknown]</text></g><g><title>[unknown] (54 samples, 17.76%)</title><rect x="56.9079%" y="373" width="17.7632%" height="15" fill="rgb(215,141,46)" fg:x="173" fg:w="54"/><text x="57.1579%" y="383.50">[unknown]</text></g><g><title>[unknown] (50 samples, 16.45%)</title><rect x="58.2237%" y="357" width="16.4474%" height="15" fill="rgb(250,160,47)" fg:x="177" fg:w="50"/><text x="58.4737%" y="367.50">[unknown]</text></g><g><title>[unknown] (50 samples, 16.45%)</title><rect x="58.2237%" y="341" width="16.4474%" height="15" fill="rgb(216,222,40)" fg:x="177" fg:w="50"/><text x="58.4737%" y="351.50">[unknown]</text></g><g><title>[unknown] (50 samples, 16.45%)</title><rect x="58.2237%" y="325" width="16.4474%" height="15" fill="rgb(234,217,39)" fg:x="177" fg:w="50"/><text x="58.4737%" y="335.50">[unknown]</text></g><g><title>[unknown] (50 samples, 16.45%)</title><rect x="58.2237%" y="309" width="16.4474%" height="15" fill="rgb(207,178,40)" fg:x="177" fg:w="50"/><text x="58.4737%" y="319.50">[unknown]</text></g><g><title>[unknown] (50 samples, 16.45%)</title><rect x="58.2237%" y="293" width="16.4474%" height="15" fill="rgb(221,136,13)" fg:x="177" fg:w="50"/><text x="58.4737%" y="303.50">[unknown]</text></g><g><title>[unknown] (50 samples, 16.45%)</title><rect x="58.2237%" y="277" width="16.4474%" height="15" fill="rgb(249,199,10)" fg:x="177" fg:w="50"/><text x="58.4737%" y="287.50">[unknown]</text></g><g><title>[unknown] (50 samples, 16.45%)</title><rect x="58.2237%" y="261" width="16.4474%" height="15" fill="rgb(249,222,13)" fg:x="177" fg:w="50"/><text x="58.4737%" y="271.50">[unknown]</text></g><g><title>[unknown] (50 samples, 16.45%)</title><rect x="58.2237%" y="245" width="16.4474%" height="15" fill="rgb(244,185,38)" fg:x="177" fg:w="50"/><text x="58.4737%" y="255.50">[unknown]</text></g><g><title>[unknown] (50 samples, 16.45%)</title><rect x="58.2237%" y="229" width="16.4474%" height="15" fill="rgb(236,202,9)" fg:x="177" fg:w="50"/><text x="58.4737%" y="239.50">[unknown]</text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;lab4::checksum::Checksum&gt;&gt; (3 samples, 0.99%)</title><rect x="74.6711%" y="533" width="0.9868%" height="15" fill="rgb(250,229,37)" fg:x="227" fg:w="3"/><text x="74.9211%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.99%)</title><rect x="74.6711%" y="517" width="0.9868%" height="15" fill="rgb(206,174,23)" fg:x="227" fg:w="3"/><text x="74.9211%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (3 samples, 0.99%)</title><rect x="74.6711%" y="501" width="0.9868%" height="15" fill="rgb(211,33,43)" fg:x="227" fg:w="3"/><text x="74.9211%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (3 samples, 0.99%)</title><rect x="74.6711%" y="485" width="0.9868%" height="15" fill="rgb(245,58,50)" fg:x="227" fg:w="3"/><text x="74.9211%" y="495.50"></text></g><g><title>__GI___pthread_mutex_unlock (3 samples, 0.99%)</title><rect x="74.6711%" y="469" width="0.9868%" height="15" fill="rgb(244,68,36)" fg:x="227" fg:w="3"/><text x="74.9211%" y="479.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (3 samples, 0.99%)</title><rect x="74.6711%" y="453" width="0.9868%" height="15" fill="rgb(232,229,15)" fg:x="227" fg:w="3"/><text x="74.9211%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="75.0000%" y="437" width="0.6579%" height="15" fill="rgb(254,30,23)" fg:x="228" fg:w="2"/><text x="75.2500%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="75.0000%" y="421" width="0.6579%" height="15" fill="rgb(235,160,14)" fg:x="228" fg:w="2"/><text x="75.2500%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="75.0000%" y="405" width="0.6579%" height="15" fill="rgb(212,155,44)" fg:x="228" fg:w="2"/><text x="75.2500%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="75.3289%" y="389" width="0.3289%" height="15" fill="rgb(226,2,50)" fg:x="229" fg:w="1"/><text x="75.5789%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="75.3289%" y="373" width="0.3289%" height="15" fill="rgb(234,177,6)" fg:x="229" fg:w="1"/><text x="75.5789%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="75.3289%" y="357" width="0.3289%" height="15" fill="rgb(217,24,9)" fg:x="229" fg:w="1"/><text x="75.5789%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="75.3289%" y="341" width="0.3289%" height="15" fill="rgb(220,13,46)" fg:x="229" fg:w="1"/><text x="75.5789%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="75.3289%" y="325" width="0.3289%" height="15" fill="rgb(239,221,27)" fg:x="229" fg:w="1"/><text x="75.5789%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="75.3289%" y="309" width="0.3289%" height="15" fill="rgb(222,198,25)" fg:x="229" fg:w="1"/><text x="75.5789%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="75.3289%" y="293" width="0.3289%" height="15" fill="rgb(211,99,13)" fg:x="229" fg:w="1"/><text x="75.5789%" y="303.50"></text></g><g><title>std::panic::catch_unwind (178 samples, 58.55%)</title><rect x="30.9211%" y="677" width="58.5526%" height="15" fill="rgb(232,111,31)" fg:x="94" fg:w="178"/><text x="31.1711%" y="687.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (178 samples, 58.55%)</title><rect x="30.9211%" y="661" width="58.5526%" height="15" fill="rgb(245,82,37)" fg:x="94" fg:w="178"/><text x="31.1711%" y="671.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (178 samples, 58.55%)</title><rect x="30.9211%" y="645" width="58.5526%" height="15" fill="rgb(227,149,46)" fg:x="94" fg:w="178"/><text x="31.1711%" y="655.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (178 samples, 58.55%)</title><rect x="30.9211%" y="629" width="58.5526%" height="15" fill="rgb(218,36,50)" fg:x="94" fg:w="178"/><text x="31.1711%" y="639.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (178 samples, 58.55%)</title><rect x="30.9211%" y="613" width="58.5526%" height="15" fill="rgb(226,80,48)" fg:x="94" fg:w="178"/><text x="31.1711%" y="623.50">std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (178 samples, 58.55%)</title><rect x="30.9211%" y="597" width="58.5526%" height="15" fill="rgb(238,224,15)" fg:x="94" fg:w="178"/><text x="31.1711%" y="607.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lab4::hackathon::{{closure}} (178 samples, 58.55%)</title><rect x="30.9211%" y="581" width="58.5526%" height="15" fill="rgb(241,136,10)" fg:x="94" fg:w="178"/><text x="31.1711%" y="591.50">lab4::hackathon::{{closure}}</text></g><g><title>lab4::student::Student::run (122 samples, 40.13%)</title><rect x="49.3421%" y="565" width="40.1316%" height="15" fill="rgb(208,32,45)" fg:x="150" fg:w="122"/><text x="49.5921%" y="575.50">lab4::student::Student::run</text></g><g><title>lab4::student::Student::empty_jobs (45 samples, 14.80%)</title><rect x="74.6711%" y="549" width="14.8026%" height="15" fill="rgb(207,135,9)" fg:x="227" fg:w="45"/><text x="74.9211%" y="559.50">lab4::student::Student:..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (42 samples, 13.82%)</title><rect x="75.6579%" y="533" width="13.8158%" height="15" fill="rgb(206,86,44)" fg:x="230" fg:w="42"/><text x="75.9079%" y="543.50">std::sync::mutex::Mut..</text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (42 samples, 13.82%)</title><rect x="75.6579%" y="517" width="13.8158%" height="15" fill="rgb(245,177,15)" fg:x="230" fg:w="42"/><text x="75.9079%" y="527.50">std::sys_common::mute..</text></g><g><title>std::sys::unix::mutex::Mutex::lock (42 samples, 13.82%)</title><rect x="75.6579%" y="501" width="13.8158%" height="15" fill="rgb(206,64,50)" fg:x="230" fg:w="42"/><text x="75.9079%" y="511.50">std::sys::unix::mutex..</text></g><g><title>__GI___pthread_mutex_lock (42 samples, 13.82%)</title><rect x="75.6579%" y="485" width="13.8158%" height="15" fill="rgb(234,36,40)" fg:x="230" fg:w="42"/><text x="75.9079%" y="495.50">__GI___pthread_mutex_..</text></g><g><title>__lll_lock_wait (42 samples, 13.82%)</title><rect x="75.6579%" y="469" width="13.8158%" height="15" fill="rgb(213,64,8)" fg:x="230" fg:w="42"/><text x="75.9079%" y="479.50">__lll_lock_wait</text></g><g><title>[unknown] (41 samples, 13.49%)</title><rect x="75.9868%" y="453" width="13.4868%" height="15" fill="rgb(210,75,36)" fg:x="231" fg:w="41"/><text x="76.2368%" y="463.50">[unknown]</text></g><g><title>[unknown] (41 samples, 13.49%)</title><rect x="75.9868%" y="437" width="13.4868%" height="15" fill="rgb(229,88,21)" fg:x="231" fg:w="41"/><text x="76.2368%" y="447.50">[unknown]</text></g><g><title>[unknown] (41 samples, 13.49%)</title><rect x="75.9868%" y="421" width="13.4868%" height="15" fill="rgb(252,204,47)" fg:x="231" fg:w="41"/><text x="76.2368%" y="431.50">[unknown]</text></g><g><title>[unknown] (41 samples, 13.49%)</title><rect x="75.9868%" y="405" width="13.4868%" height="15" fill="rgb(208,77,27)" fg:x="231" fg:w="41"/><text x="76.2368%" y="415.50">[unknown]</text></g><g><title>[unknown] (41 samples, 13.49%)</title><rect x="75.9868%" y="389" width="13.4868%" height="15" fill="rgb(221,76,26)" fg:x="231" fg:w="41"/><text x="76.2368%" y="399.50">[unknown]</text></g><g><title>[unknown] (41 samples, 13.49%)</title><rect x="75.9868%" y="373" width="13.4868%" height="15" fill="rgb(225,139,18)" fg:x="231" fg:w="41"/><text x="76.2368%" y="383.50">[unknown]</text></g><g><title>[unknown] (40 samples, 13.16%)</title><rect x="76.3158%" y="357" width="13.1579%" height="15" fill="rgb(230,137,11)" fg:x="232" fg:w="40"/><text x="76.5658%" y="367.50">[unknown]</text></g><g><title>[unknown] (40 samples, 13.16%)</title><rect x="76.3158%" y="341" width="13.1579%" height="15" fill="rgb(212,28,1)" fg:x="232" fg:w="40"/><text x="76.5658%" y="351.50">[unknown]</text></g><g><title>[unknown] (40 samples, 13.16%)</title><rect x="76.3158%" y="325" width="13.1579%" height="15" fill="rgb(248,164,17)" fg:x="232" fg:w="40"/><text x="76.5658%" y="335.50">[unknown]</text></g><g><title>[unknown] (40 samples, 13.16%)</title><rect x="76.3158%" y="309" width="13.1579%" height="15" fill="rgb(222,171,42)" fg:x="232" fg:w="40"/><text x="76.5658%" y="319.50">[unknown]</text></g><g><title>[unknown] (38 samples, 12.50%)</title><rect x="76.9737%" y="293" width="12.5000%" height="15" fill="rgb(243,84,45)" fg:x="234" fg:w="38"/><text x="77.2237%" y="303.50">[unknown]</text></g><g><title>[unknown] (38 samples, 12.50%)</title><rect x="76.9737%" y="277" width="12.5000%" height="15" fill="rgb(252,49,23)" fg:x="234" fg:w="38"/><text x="77.2237%" y="287.50">[unknown]</text></g><g><title>[unknown] (38 samples, 12.50%)</title><rect x="76.9737%" y="261" width="12.5000%" height="15" fill="rgb(215,19,7)" fg:x="234" fg:w="38"/><text x="77.2237%" y="271.50">[unknown]</text></g><g><title>[unknown] (38 samples, 12.50%)</title><rect x="76.9737%" y="245" width="12.5000%" height="15" fill="rgb(238,81,41)" fg:x="234" fg:w="38"/><text x="77.2237%" y="255.50">[unknown]</text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="89.4737%" y="533" width="0.3289%" height="15" fill="rgb(210,199,37)" fg:x="272" fg:w="1"/><text x="89.7237%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="89.4737%" y="517" width="0.3289%" height="15" fill="rgb(244,192,49)" fg:x="272" fg:w="1"/><text x="89.7237%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="89.4737%" y="501" width="0.3289%" height="15" fill="rgb(226,211,11)" fg:x="272" fg:w="1"/><text x="89.7237%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="89.4737%" y="485" width="0.3289%" height="15" fill="rgb(236,162,54)" fg:x="272" fg:w="1"/><text x="89.7237%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="89.4737%" y="469" width="0.3289%" height="15" fill="rgb(220,229,9)" fg:x="272" fg:w="1"/><text x="89.7237%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="89.4737%" y="453" width="0.3289%" height="15" fill="rgb(250,87,22)" fg:x="272" fg:w="1"/><text x="89.7237%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="89.4737%" y="437" width="0.3289%" height="15" fill="rgb(239,43,17)" fg:x="272" fg:w="1"/><text x="89.7237%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="89.4737%" y="421" width="0.3289%" height="15" fill="rgb(231,177,25)" fg:x="272" fg:w="1"/><text x="89.7237%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="89.4737%" y="405" width="0.3289%" height="15" fill="rgb(219,179,1)" fg:x="272" fg:w="1"/><text x="89.7237%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="89.4737%" y="389" width="0.3289%" height="15" fill="rgb(238,219,53)" fg:x="272" fg:w="1"/><text x="89.7237%" y="399.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (181 samples, 59.54%)</title><rect x="30.9211%" y="741" width="59.5395%" height="15" fill="rgb(232,167,36)" fg:x="94" fg:w="181"/><text x="31.1711%" y="751.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (181 samples, 59.54%)</title><rect x="30.9211%" y="725" width="59.5395%" height="15" fill="rgb(244,19,51)" fg:x="94" fg:w="181"/><text x="31.1711%" y="735.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (181 samples, 59.54%)</title><rect x="30.9211%" y="709" width="59.5395%" height="15" fill="rgb(224,6,22)" fg:x="94" fg:w="181"/><text x="31.1711%" y="719.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (181 samples, 59.54%)</title><rect x="30.9211%" y="693" width="59.5395%" height="15" fill="rgb(224,145,5)" fg:x="94" fg:w="181"/><text x="31.1711%" y="703.50">std::thread::Builder::spawn_unchecked::{{closure}}</text></g><g><title>std::sys::unix::thread::guard::current (3 samples, 0.99%)</title><rect x="89.4737%" y="677" width="0.9868%" height="15" fill="rgb(234,130,49)" fg:x="272" fg:w="3"/><text x="89.7237%" y="687.50"></text></g><g><title>pthread_getattr_np (3 samples, 0.99%)</title><rect x="89.4737%" y="661" width="0.9868%" height="15" fill="rgb(254,6,2)" fg:x="272" fg:w="3"/><text x="89.7237%" y="671.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.99%)</title><rect x="89.4737%" y="645" width="0.9868%" height="15" fill="rgb(208,96,46)" fg:x="272" fg:w="3"/><text x="89.7237%" y="655.50"></text></g><g><title>tcache_init (3 samples, 0.99%)</title><rect x="89.4737%" y="629" width="0.9868%" height="15" fill="rgb(239,3,39)" fg:x="272" fg:w="3"/><text x="89.7237%" y="639.50"></text></g><g><title>tcache_init (3 samples, 0.99%)</title><rect x="89.4737%" y="613" width="0.9868%" height="15" fill="rgb(233,210,1)" fg:x="272" fg:w="3"/><text x="89.7237%" y="623.50"></text></g><g><title>arena_get2 (3 samples, 0.99%)</title><rect x="89.4737%" y="597" width="0.9868%" height="15" fill="rgb(244,137,37)" fg:x="272" fg:w="3"/><text x="89.7237%" y="607.50"></text></g><g><title>arena_get2 (3 samples, 0.99%)</title><rect x="89.4737%" y="581" width="0.9868%" height="15" fill="rgb(240,136,2)" fg:x="272" fg:w="3"/><text x="89.7237%" y="591.50"></text></g><g><title>_int_new_arena (3 samples, 0.99%)</title><rect x="89.4737%" y="565" width="0.9868%" height="15" fill="rgb(239,18,37)" fg:x="272" fg:w="3"/><text x="89.7237%" y="575.50"></text></g><g><title>new_heap (3 samples, 0.99%)</title><rect x="89.4737%" y="549" width="0.9868%" height="15" fill="rgb(218,185,22)" fg:x="272" fg:w="3"/><text x="89.7237%" y="559.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.66%)</title><rect x="89.8026%" y="533" width="0.6579%" height="15" fill="rgb(225,218,4)" fg:x="273" fg:w="2"/><text x="90.0526%" y="543.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.66%)</title><rect x="89.8026%" y="517" width="0.6579%" height="15" fill="rgb(230,182,32)" fg:x="273" fg:w="2"/><text x="90.0526%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="89.8026%" y="501" width="0.6579%" height="15" fill="rgb(242,56,43)" fg:x="273" fg:w="2"/><text x="90.0526%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="89.8026%" y="485" width="0.6579%" height="15" fill="rgb(233,99,24)" fg:x="273" fg:w="2"/><text x="90.0526%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="89.8026%" y="469" width="0.6579%" height="15" fill="rgb(234,209,42)" fg:x="273" fg:w="2"/><text x="90.0526%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="89.8026%" y="453" width="0.6579%" height="15" fill="rgb(227,7,12)" fg:x="273" fg:w="2"/><text x="90.0526%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="89.8026%" y="437" width="0.6579%" height="15" fill="rgb(245,203,43)" fg:x="273" fg:w="2"/><text x="90.0526%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="89.8026%" y="421" width="0.6579%" height="15" fill="rgb(238,205,33)" fg:x="273" fg:w="2"/><text x="90.0526%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="89.8026%" y="405" width="0.6579%" height="15" fill="rgb(231,56,7)" fg:x="273" fg:w="2"/><text x="90.0526%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="89.8026%" y="389" width="0.6579%" height="15" fill="rgb(244,186,29)" fg:x="273" fg:w="2"/><text x="90.0526%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="90.1316%" y="373" width="0.3289%" height="15" fill="rgb(234,111,31)" fg:x="274" fg:w="1"/><text x="90.3816%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="90.1316%" y="357" width="0.3289%" height="15" fill="rgb(241,149,10)" fg:x="274" fg:w="1"/><text x="90.3816%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="90.1316%" y="341" width="0.3289%" height="15" fill="rgb(249,206,44)" fg:x="274" fg:w="1"/><text x="90.3816%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="90.1316%" y="325" width="0.3289%" height="15" fill="rgb(251,153,30)" fg:x="274" fg:w="1"/><text x="90.3816%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="90.1316%" y="309" width="0.3289%" height="15" fill="rgb(239,152,38)" fg:x="274" fg:w="1"/><text x="90.3816%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="90.1316%" y="293" width="0.3289%" height="15" fill="rgb(249,139,47)" fg:x="274" fg:w="1"/><text x="90.3816%" y="303.50"></text></g><g><title>__sigaltstack (2 samples, 0.66%)</title><rect x="90.4605%" y="709" width="0.6579%" height="15" fill="rgb(244,64,35)" fg:x="275" fg:w="2"/><text x="90.7105%" y="719.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="90.4605%" y="693" width="0.6579%" height="15" fill="rgb(216,46,15)" fg:x="275" fg:w="2"/><text x="90.7105%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="90.4605%" y="677" width="0.6579%" height="15" fill="rgb(250,74,19)" fg:x="275" fg:w="2"/><text x="90.7105%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="90.4605%" y="661" width="0.6579%" height="15" fill="rgb(249,42,33)" fg:x="275" fg:w="2"/><text x="90.7105%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="90.4605%" y="645" width="0.6579%" height="15" fill="rgb(242,149,17)" fg:x="275" fg:w="2"/><text x="90.7105%" y="655.50"></text></g><g><title>__GI___mmap64 (4 samples, 1.32%)</title><rect x="91.1184%" y="677" width="1.3158%" height="15" fill="rgb(244,29,21)" fg:x="277" fg:w="4"/><text x="91.3684%" y="687.50"></text></g><g><title>__GI___mmap64 (4 samples, 1.32%)</title><rect x="91.1184%" y="661" width="1.3158%" height="15" fill="rgb(220,130,37)" fg:x="277" fg:w="4"/><text x="91.3684%" y="671.50"></text></g><g><title>[unknown] (4 samples, 1.32%)</title><rect x="91.1184%" y="645" width="1.3158%" height="15" fill="rgb(211,67,2)" fg:x="277" fg:w="4"/><text x="91.3684%" y="655.50"></text></g><g><title>[unknown] (4 samples, 1.32%)</title><rect x="91.1184%" y="629" width="1.3158%" height="15" fill="rgb(235,68,52)" fg:x="277" fg:w="4"/><text x="91.3684%" y="639.50"></text></g><g><title>[unknown] (4 samples, 1.32%)</title><rect x="91.1184%" y="613" width="1.3158%" height="15" fill="rgb(246,142,3)" fg:x="277" fg:w="4"/><text x="91.3684%" y="623.50"></text></g><g><title>[unknown] (4 samples, 1.32%)</title><rect x="91.1184%" y="597" width="1.3158%" height="15" fill="rgb(241,25,7)" fg:x="277" fg:w="4"/><text x="91.3684%" y="607.50"></text></g><g><title>[unknown] (4 samples, 1.32%)</title><rect x="91.1184%" y="581" width="1.3158%" height="15" fill="rgb(242,119,39)" fg:x="277" fg:w="4"/><text x="91.3684%" y="591.50"></text></g><g><title>[unknown] (4 samples, 1.32%)</title><rect x="91.1184%" y="565" width="1.3158%" height="15" fill="rgb(241,98,45)" fg:x="277" fg:w="4"/><text x="91.3684%" y="575.50"></text></g><g><title>[unknown] (4 samples, 1.32%)</title><rect x="91.1184%" y="549" width="1.3158%" height="15" fill="rgb(254,28,30)" fg:x="277" fg:w="4"/><text x="91.3684%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.99%)</title><rect x="91.4474%" y="533" width="0.9868%" height="15" fill="rgb(241,142,54)" fg:x="278" fg:w="3"/><text x="91.6974%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.99%)</title><rect x="91.4474%" y="517" width="0.9868%" height="15" fill="rgb(222,85,15)" fg:x="278" fg:w="3"/><text x="91.6974%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="91.7763%" y="501" width="0.6579%" height="15" fill="rgb(210,85,47)" fg:x="279" fg:w="2"/><text x="92.0263%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="91.7763%" y="485" width="0.6579%" height="15" fill="rgb(224,206,25)" fg:x="279" fg:w="2"/><text x="92.0263%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.66%)</title><rect x="91.7763%" y="469" width="0.6579%" height="15" fill="rgb(243,201,19)" fg:x="279" fg:w="2"/><text x="92.0263%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="92.1053%" y="453" width="0.3289%" height="15" fill="rgb(236,59,4)" fg:x="280" fg:w="1"/><text x="92.3553%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="92.1053%" y="437" width="0.3289%" height="15" fill="rgb(254,179,45)" fg:x="280" fg:w="1"/><text x="92.3553%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="92.1053%" y="421" width="0.3289%" height="15" fill="rgb(226,14,10)" fg:x="280" fg:w="1"/><text x="92.3553%" y="431.50"></text></g><g><title>__GI___clone (279 samples, 91.78%)</title><rect x="1.9737%" y="789" width="91.7763%" height="15" fill="rgb(244,27,41)" fg:x="6" fg:w="279"/><text x="2.2237%" y="799.50">__GI___clone</text></g><g><title>start_thread (192 samples, 63.16%)</title><rect x="30.5921%" y="773" width="63.1579%" height="15" fill="rgb(235,35,32)" fg:x="93" fg:w="192"/><text x="30.8421%" y="783.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (191 samples, 62.83%)</title><rect x="30.9211%" y="757" width="62.8289%" height="15" fill="rgb(218,68,31)" fg:x="94" fg:w="191"/><text x="31.1711%" y="767.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (10 samples, 3.29%)</title><rect x="90.4605%" y="741" width="3.2895%" height="15" fill="rgb(207,120,37)" fg:x="275" fg:w="10"/><text x="90.7105%" y="751.50">std..</text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (10 samples, 3.29%)</title><rect x="90.4605%" y="725" width="3.2895%" height="15" fill="rgb(227,98,0)" fg:x="275" fg:w="10"/><text x="90.7105%" y="735.50">std..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (8 samples, 2.63%)</title><rect x="91.1184%" y="709" width="2.6316%" height="15" fill="rgb(207,7,3)" fg:x="277" fg:w="8"/><text x="91.3684%" y="719.50">st..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (8 samples, 2.63%)</title><rect x="91.1184%" y="693" width="2.6316%" height="15" fill="rgb(206,98,19)" fg:x="277" fg:w="8"/><text x="91.3684%" y="703.50">st..</text></g><g><title>__GI___mprotect (4 samples, 1.32%)</title><rect x="92.4342%" y="677" width="1.3158%" height="15" fill="rgb(217,5,26)" fg:x="281" fg:w="4"/><text x="92.6842%" y="687.50"></text></g><g><title>[unknown] (4 samples, 1.32%)</title><rect x="92.4342%" y="661" width="1.3158%" height="15" fill="rgb(235,190,38)" fg:x="281" fg:w="4"/><text x="92.6842%" y="671.50"></text></g><g><title>[unknown] (4 samples, 1.32%)</title><rect x="92.4342%" y="645" width="1.3158%" height="15" fill="rgb(247,86,24)" fg:x="281" fg:w="4"/><text x="92.6842%" y="655.50"></text></g><g><title>[unknown] (4 samples, 1.32%)</title><rect x="92.4342%" y="629" width="1.3158%" height="15" fill="rgb(205,101,16)" fg:x="281" fg:w="4"/><text x="92.6842%" y="639.50"></text></g><g><title>[unknown] (4 samples, 1.32%)</title><rect x="92.4342%" y="613" width="1.3158%" height="15" fill="rgb(246,168,33)" fg:x="281" fg:w="4"/><text x="92.6842%" y="623.50"></text></g><g><title>[unknown] (4 samples, 1.32%)</title><rect x="92.4342%" y="597" width="1.3158%" height="15" fill="rgb(231,114,1)" fg:x="281" fg:w="4"/><text x="92.6842%" y="607.50"></text></g><g><title>[unknown] (4 samples, 1.32%)</title><rect x="92.4342%" y="581" width="1.3158%" height="15" fill="rgb(207,184,53)" fg:x="281" fg:w="4"/><text x="92.6842%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="93.4211%" y="565" width="0.3289%" height="15" fill="rgb(224,95,51)" fg:x="284" fg:w="1"/><text x="93.6711%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 2.30%)</title><rect x="93.7500%" y="517" width="2.3026%" height="15" fill="rgb(212,188,45)" fg:x="285" fg:w="7"/><text x="94.0000%" y="527.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 2.30%)</title><rect x="93.7500%" y="501" width="2.3026%" height="15" fill="rgb(223,154,38)" fg:x="285" fg:w="7"/><text x="94.0000%" y="511.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (7 samples, 2.30%)</title><rect x="93.7500%" y="485" width="2.3026%" height="15" fill="rgb(251,22,52)" fg:x="285" fg:w="7"/><text x="94.0000%" y="495.50">c..</text></g><g><title>lab4::hackathon::{{closure}} (7 samples, 2.30%)</title><rect x="93.7500%" y="469" width="2.3026%" height="15" fill="rgb(229,209,22)" fg:x="285" fg:w="7"/><text x="94.0000%" y="479.50">l..</text></g><g><title>std::thread::JoinHandle&lt;T&gt;::join (7 samples, 2.30%)</title><rect x="93.7500%" y="453" width="2.3026%" height="15" fill="rgb(234,138,34)" fg:x="285" fg:w="7"/><text x="94.0000%" y="463.50">s..</text></g><g><title>std::thread::JoinInner&lt;T&gt;::join (7 samples, 2.30%)</title><rect x="93.7500%" y="437" width="2.3026%" height="15" fill="rgb(212,95,11)" fg:x="285" fg:w="7"/><text x="94.0000%" y="447.50">s..</text></g><g><title>std::sys::unix::thread::Thread::join (7 samples, 2.30%)</title><rect x="93.7500%" y="421" width="2.3026%" height="15" fill="rgb(240,179,47)" fg:x="285" fg:w="7"/><text x="94.0000%" y="431.50">s..</text></g><g><title>__pthread_clockjoin_ex (7 samples, 2.30%)</title><rect x="93.7500%" y="405" width="2.3026%" height="15" fill="rgb(240,163,11)" fg:x="285" fg:w="7"/><text x="94.0000%" y="415.50">_..</text></g><g><title>[unknown] (7 samples, 2.30%)</title><rect x="93.7500%" y="389" width="2.3026%" height="15" fill="rgb(236,37,12)" fg:x="285" fg:w="7"/><text x="94.0000%" y="399.50">[..</text></g><g><title>[unknown] (7 samples, 2.30%)</title><rect x="93.7500%" y="373" width="2.3026%" height="15" fill="rgb(232,164,16)" fg:x="285" fg:w="7"/><text x="94.0000%" y="383.50">[..</text></g><g><title>[unknown] (7 samples, 2.30%)</title><rect x="93.7500%" y="357" width="2.3026%" height="15" fill="rgb(244,205,15)" fg:x="285" fg:w="7"/><text x="94.0000%" y="367.50">[..</text></g><g><title>[unknown] (7 samples, 2.30%)</title><rect x="93.7500%" y="341" width="2.3026%" height="15" fill="rgb(223,117,47)" fg:x="285" fg:w="7"/><text x="94.0000%" y="351.50">[..</text></g><g><title>[unknown] (7 samples, 2.30%)</title><rect x="93.7500%" y="325" width="2.3026%" height="15" fill="rgb(244,107,35)" fg:x="285" fg:w="7"/><text x="94.0000%" y="335.50">[..</text></g><g><title>[unknown] (7 samples, 2.30%)</title><rect x="93.7500%" y="309" width="2.3026%" height="15" fill="rgb(205,140,8)" fg:x="285" fg:w="7"/><text x="94.0000%" y="319.50">[..</text></g><g><title>[unknown] (6 samples, 1.97%)</title><rect x="94.0789%" y="293" width="1.9737%" height="15" fill="rgb(228,84,46)" fg:x="286" fg:w="6"/><text x="94.3289%" y="303.50">[..</text></g><g><title>[unknown] (6 samples, 1.97%)</title><rect x="94.0789%" y="277" width="1.9737%" height="15" fill="rgb(254,188,9)" fg:x="286" fg:w="6"/><text x="94.3289%" y="287.50">[..</text></g><g><title>[unknown] (6 samples, 1.97%)</title><rect x="94.0789%" y="261" width="1.9737%" height="15" fill="rgb(206,112,54)" fg:x="286" fg:w="6"/><text x="94.3289%" y="271.50">[..</text></g><g><title>[unknown] (6 samples, 1.97%)</title><rect x="94.0789%" y="245" width="1.9737%" height="15" fill="rgb(216,84,49)" fg:x="286" fg:w="6"/><text x="94.3289%" y="255.50">[..</text></g><g><title>[unknown] (6 samples, 1.97%)</title><rect x="94.0789%" y="229" width="1.9737%" height="15" fill="rgb(214,194,35)" fg:x="286" fg:w="6"/><text x="94.3289%" y="239.50">[..</text></g><g><title>[unknown] (6 samples, 1.97%)</title><rect x="94.0789%" y="213" width="1.9737%" height="15" fill="rgb(249,28,3)" fg:x="286" fg:w="6"/><text x="94.3289%" y="223.50">[..</text></g><g><title>[unknown] (6 samples, 1.97%)</title><rect x="94.0789%" y="197" width="1.9737%" height="15" fill="rgb(222,56,52)" fg:x="286" fg:w="6"/><text x="94.3289%" y="207.50">[..</text></g><g><title>[unknown] (6 samples, 1.97%)</title><rect x="94.0789%" y="181" width="1.9737%" height="15" fill="rgb(245,217,50)" fg:x="286" fg:w="6"/><text x="94.3289%" y="191.50">[..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.33%)</title><rect x="96.0526%" y="357" width="0.3289%" height="15" fill="rgb(213,201,24)" fg:x="292" fg:w="1"/><text x="96.3026%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.33%)</title><rect x="96.0526%" y="341" width="0.3289%" height="15" fill="rgb(248,116,28)" fg:x="292" fg:w="1"/><text x="96.3026%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.33%)</title><rect x="96.0526%" y="325" width="0.3289%" height="15" fill="rgb(219,72,43)" fg:x="292" fg:w="1"/><text x="96.3026%" y="335.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.33%)</title><rect x="96.0526%" y="309" width="0.3289%" height="15" fill="rgb(209,138,14)" fg:x="292" fg:w="1"/><text x="96.3026%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.33%)</title><rect x="96.0526%" y="293" width="0.3289%" height="15" fill="rgb(222,18,33)" fg:x="292" fg:w="1"/><text x="96.3026%" y="303.50"></text></g><g><title>&lt;core::str::iter::SplitTerminator&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.33%)</title><rect x="96.0526%" y="277" width="0.3289%" height="15" fill="rgb(213,199,7)" fg:x="292" fg:w="1"/><text x="96.3026%" y="287.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1 samples, 0.33%)</title><rect x="96.0526%" y="261" width="0.3289%" height="15" fill="rgb(250,110,10)" fg:x="292" fg:w="1"/><text x="96.3026%" y="271.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.33%)</title><rect x="96.0526%" y="245" width="0.3289%" height="15" fill="rgb(248,123,6)" fg:x="292" fg:w="1"/><text x="96.3026%" y="255.50"></text></g><g><title>lab4::idea::IdeaGenerator::new (2 samples, 0.66%)</title><rect x="96.0526%" y="517" width="0.6579%" height="15" fill="rgb(206,91,31)" fg:x="292" fg:w="2"/><text x="96.3026%" y="527.50"></text></g><g><title>lab4::idea::IdeaGenerator::cross_product (2 samples, 0.66%)</title><rect x="96.0526%" y="501" width="0.6579%" height="15" fill="rgb(211,154,13)" fg:x="292" fg:w="2"/><text x="96.3026%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.66%)</title><rect x="96.0526%" y="485" width="0.6579%" height="15" fill="rgb(225,148,7)" fg:x="292" fg:w="2"/><text x="96.3026%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.66%)</title><rect x="96.0526%" y="469" width="0.6579%" height="15" fill="rgb(220,160,43)" fg:x="292" fg:w="2"/><text x="96.3026%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.66%)</title><rect x="96.0526%" y="453" width="0.6579%" height="15" fill="rgb(213,52,39)" fg:x="292" fg:w="2"/><text x="96.3026%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.66%)</title><rect x="96.0526%" y="437" width="0.6579%" height="15" fill="rgb(243,137,7)" fg:x="292" fg:w="2"/><text x="96.3026%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.66%)</title><rect x="96.0526%" y="421" width="0.6579%" height="15" fill="rgb(230,79,13)" fg:x="292" fg:w="2"/><text x="96.3026%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.66%)</title><rect x="96.0526%" y="405" width="0.6579%" height="15" fill="rgb(247,105,23)" fg:x="292" fg:w="2"/><text x="96.3026%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.66%)</title><rect x="96.0526%" y="389" width="0.6579%" height="15" fill="rgb(223,179,41)" fg:x="292" fg:w="2"/><text x="96.3026%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.66%)</title><rect x="96.0526%" y="373" width="0.6579%" height="15" fill="rgb(218,9,34)" fg:x="292" fg:w="2"/><text x="96.3026%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.33%)</title><rect x="96.3816%" y="357" width="0.3289%" height="15" fill="rgb(222,106,8)" fg:x="293" fg:w="1"/><text x="96.6316%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.33%)</title><rect x="96.3816%" y="341" width="0.3289%" height="15" fill="rgb(211,220,0)" fg:x="293" fg:w="1"/><text x="96.6316%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.33%)</title><rect x="96.3816%" y="325" width="0.3289%" height="15" fill="rgb(229,52,16)" fg:x="293" fg:w="1"/><text x="96.6316%" y="335.50"></text></g><g><title>lab4::idea::IdeaGenerator::cross_product::{{closure}}::{{closure}} (1 samples, 0.33%)</title><rect x="96.3816%" y="309" width="0.3289%" height="15" fill="rgb(212,155,18)" fg:x="293" fg:w="1"/><text x="96.6316%" y="319.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.33%)</title><rect x="96.3816%" y="293" width="0.3289%" height="15" fill="rgb(242,21,14)" fg:x="293" fg:w="1"/><text x="96.6316%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.33%)</title><rect x="96.3816%" y="277" width="0.3289%" height="15" fill="rgb(222,19,48)" fg:x="293" fg:w="1"/><text x="96.6316%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.33%)</title><rect x="96.3816%" y="261" width="0.3289%" height="15" fill="rgb(232,45,27)" fg:x="293" fg:w="1"/><text x="96.6316%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.33%)</title><rect x="96.3816%" y="245" width="0.3289%" height="15" fill="rgb(249,103,42)" fg:x="293" fg:w="1"/><text x="96.6316%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.33%)</title><rect x="96.3816%" y="229" width="0.3289%" height="15" fill="rgb(246,81,33)" fg:x="293" fg:w="1"/><text x="96.6316%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.33%)</title><rect x="96.3816%" y="213" width="0.3289%" height="15" fill="rgb(252,33,42)" fg:x="293" fg:w="1"/><text x="96.6316%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.33%)</title><rect x="96.3816%" y="197" width="0.3289%" height="15" fill="rgb(209,212,41)" fg:x="293" fg:w="1"/><text x="96.6316%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.33%)</title><rect x="96.3816%" y="181" width="0.3289%" height="15" fill="rgb(207,154,6)" fg:x="293" fg:w="1"/><text x="96.6316%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.33%)</title><rect x="96.3816%" y="165" width="0.3289%" height="15" fill="rgb(223,64,47)" fg:x="293" fg:w="1"/><text x="96.6316%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.33%)</title><rect x="96.3816%" y="149" width="0.3289%" height="15" fill="rgb(211,161,38)" fg:x="293" fg:w="1"/><text x="96.6316%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.33%)</title><rect x="96.3816%" y="133" width="0.3289%" height="15" fill="rgb(219,138,40)" fg:x="293" fg:w="1"/><text x="96.6316%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.33%)</title><rect x="96.3816%" y="117" width="0.3289%" height="15" fill="rgb(241,228,46)" fg:x="293" fg:w="1"/><text x="96.6316%" y="127.50"></text></g><g><title>__rdl_alloc (1 samples, 0.33%)</title><rect x="96.3816%" y="101" width="0.3289%" height="15" fill="rgb(223,209,38)" fg:x="293" fg:w="1"/><text x="96.6316%" y="111.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.33%)</title><rect x="96.3816%" y="85" width="0.3289%" height="15" fill="rgb(236,164,45)" fg:x="293" fg:w="1"/><text x="96.6316%" y="95.50"></text></g><g><title>std::io::stdio::_print (1 samples, 0.33%)</title><rect x="96.7105%" y="517" width="0.3289%" height="15" fill="rgb(231,15,5)" fg:x="294" fg:w="1"/><text x="96.9605%" y="527.50"></text></g><g><title>std::io::stdio::print_to (1 samples, 0.33%)</title><rect x="96.7105%" y="501" width="0.3289%" height="15" fill="rgb(252,35,15)" fg:x="294" fg:w="1"/><text x="96.9605%" y="511.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.33%)</title><rect x="96.7105%" y="485" width="0.3289%" height="15" fill="rgb(248,181,18)" fg:x="294" fg:w="1"/><text x="96.9605%" y="495.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.33%)</title><rect x="96.7105%" y="469" width="0.3289%" height="15" fill="rgb(233,39,42)" fg:x="294" fg:w="1"/><text x="96.9605%" y="479.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.33%)</title><rect x="96.7105%" y="453" width="0.3289%" height="15" fill="rgb(238,110,33)" fg:x="294" fg:w="1"/><text x="96.9605%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.33%)</title><rect x="96.7105%" y="437" width="0.3289%" height="15" fill="rgb(233,195,10)" fg:x="294" fg:w="1"/><text x="96.9605%" y="447.50"></text></g><g><title>__libc_start_main (11 samples, 3.62%)</title><rect x="93.7500%" y="773" width="3.6184%" height="15" fill="rgb(254,105,3)" fg:x="285" fg:w="11"/><text x="94.0000%" y="783.50">__li..</text></g><g><title>main (11 samples, 3.62%)</title><rect x="93.7500%" y="757" width="3.6184%" height="15" fill="rgb(221,225,9)" fg:x="285" fg:w="11"/><text x="94.0000%" y="767.50">main</text></g><g><title>std::rt::lang_start_internal (11 samples, 3.62%)</title><rect x="93.7500%" y="741" width="3.6184%" height="15" fill="rgb(224,227,45)" fg:x="285" fg:w="11"/><text x="94.0000%" y="751.50">std:..</text></g><g><title>std::panic::catch_unwind (11 samples, 3.62%)</title><rect x="93.7500%" y="725" width="3.6184%" height="15" fill="rgb(229,198,43)" fg:x="285" fg:w="11"/><text x="94.0000%" y="735.50">std:..</text></g><g><title>std::panicking::try (11 samples, 3.62%)</title><rect x="93.7500%" y="709" width="3.6184%" height="15" fill="rgb(206,209,35)" fg:x="285" fg:w="11"/><text x="94.0000%" y="719.50">std:..</text></g><g><title>std::panicking::try::do_call (11 samples, 3.62%)</title><rect x="93.7500%" y="693" width="3.6184%" height="15" fill="rgb(245,195,53)" fg:x="285" fg:w="11"/><text x="94.0000%" y="703.50">std:..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (11 samples, 3.62%)</title><rect x="93.7500%" y="677" width="3.6184%" height="15" fill="rgb(240,92,26)" fg:x="285" fg:w="11"/><text x="94.0000%" y="687.50">std:..</text></g><g><title>std::panic::catch_unwind (11 samples, 3.62%)</title><rect x="93.7500%" y="661" width="3.6184%" height="15" fill="rgb(207,40,23)" fg:x="285" fg:w="11"/><text x="94.0000%" y="671.50">std:..</text></g><g><title>std::panicking::try (11 samples, 3.62%)</title><rect x="93.7500%" y="645" width="3.6184%" height="15" fill="rgb(223,111,35)" fg:x="285" fg:w="11"/><text x="94.0000%" y="655.50">std:..</text></g><g><title>std::panicking::try::do_call (11 samples, 3.62%)</title><rect x="93.7500%" y="629" width="3.6184%" height="15" fill="rgb(229,147,28)" fg:x="285" fg:w="11"/><text x="94.0000%" y="639.50">std:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (11 samples, 3.62%)</title><rect x="93.7500%" y="613" width="3.6184%" height="15" fill="rgb(211,29,28)" fg:x="285" fg:w="11"/><text x="94.0000%" y="623.50">core..</text></g><g><title>std::rt::lang_start::{{closure}} (11 samples, 3.62%)</title><rect x="93.7500%" y="597" width="3.6184%" height="15" fill="rgb(228,72,33)" fg:x="285" fg:w="11"/><text x="94.0000%" y="607.50">std:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (11 samples, 3.62%)</title><rect x="93.7500%" y="581" width="3.6184%" height="15" fill="rgb(205,214,31)" fg:x="285" fg:w="11"/><text x="94.0000%" y="591.50">std:..</text></g><g><title>core::ops::function::FnOnce::call_once (11 samples, 3.62%)</title><rect x="93.7500%" y="565" width="3.6184%" height="15" fill="rgb(224,111,15)" fg:x="285" fg:w="11"/><text x="94.0000%" y="575.50">core..</text></g><g><title>lab4::main (11 samples, 3.62%)</title><rect x="93.7500%" y="549" width="3.6184%" height="15" fill="rgb(253,21,26)" fg:x="285" fg:w="11"/><text x="94.0000%" y="559.50">lab4..</text></g><g><title>lab4::hackathon (11 samples, 3.62%)</title><rect x="93.7500%" y="533" width="3.6184%" height="15" fill="rgb(245,139,43)" fg:x="285" fg:w="11"/><text x="94.0000%" y="543.50">lab4..</text></g><g><title>std::thread::spawn (1 samples, 0.33%)</title><rect x="97.0395%" y="517" width="0.3289%" height="15" fill="rgb(252,170,7)" fg:x="295" fg:w="1"/><text x="97.2895%" y="527.50"></text></g><g><title>std::thread::Builder::spawn (1 samples, 0.33%)</title><rect x="97.0395%" y="501" width="0.3289%" height="15" fill="rgb(231,118,14)" fg:x="295" fg:w="1"/><text x="97.2895%" y="511.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (1 samples, 0.33%)</title><rect x="97.0395%" y="485" width="0.3289%" height="15" fill="rgb(238,83,0)" fg:x="295" fg:w="1"/><text x="97.2895%" y="495.50"></text></g><g><title>std::sys::unix::thread::Thread::new (1 samples, 0.33%)</title><rect x="97.0395%" y="469" width="0.3289%" height="15" fill="rgb(221,39,39)" fg:x="295" fg:w="1"/><text x="97.2895%" y="479.50"></text></g><g><title>__pthread_create_2_1 (1 samples, 0.33%)</title><rect x="97.0395%" y="453" width="0.3289%" height="15" fill="rgb(222,119,46)" fg:x="295" fg:w="1"/><text x="97.2895%" y="463.50"></text></g><g><title>allocate_stack (1 samples, 0.33%)</title><rect x="97.0395%" y="437" width="0.3289%" height="15" fill="rgb(222,165,49)" fg:x="295" fg:w="1"/><text x="97.2895%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="97.0395%" y="421" width="0.3289%" height="15" fill="rgb(219,113,52)" fg:x="295" fg:w="1"/><text x="97.2895%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="97.0395%" y="405" width="0.3289%" height="15" fill="rgb(214,7,15)" fg:x="295" fg:w="1"/><text x="97.2895%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="97.0395%" y="389" width="0.3289%" height="15" fill="rgb(235,32,4)" fg:x="295" fg:w="1"/><text x="97.2895%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="97.0395%" y="373" width="0.3289%" height="15" fill="rgb(238,90,54)" fg:x="295" fg:w="1"/><text x="97.2895%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="97.0395%" y="357" width="0.3289%" height="15" fill="rgb(213,208,19)" fg:x="295" fg:w="1"/><text x="97.2895%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="97.0395%" y="341" width="0.3289%" height="15" fill="rgb(233,156,4)" fg:x="295" fg:w="1"/><text x="97.2895%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="97.0395%" y="325" width="0.3289%" height="15" fill="rgb(207,194,5)" fg:x="295" fg:w="1"/><text x="97.2895%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.33%)</title><rect x="97.0395%" y="309" width="0.3289%" height="15" fill="rgb(206,111,30)" fg:x="295" fg:w="1"/><text x="97.2895%" y="319.50"></text></g><g><title>lab4 (297 samples, 97.70%)</title><rect x="0.0000%" y="805" width="97.6974%" height="15" fill="rgb(243,70,54)" fg:x="0" fg:w="297"/><text x="0.2500%" y="815.50">lab4</text></g><g><title>_start (12 samples, 3.95%)</title><rect x="93.7500%" y="789" width="3.9474%" height="15" fill="rgb(242,28,8)" fg:x="285" fg:w="12"/><text x="94.0000%" y="799.50">_sta..</text></g><g><title>_dl_start (1 samples, 0.33%)</title><rect x="97.3684%" y="773" width="0.3289%" height="15" fill="rgb(219,106,18)" fg:x="296" fg:w="1"/><text x="97.6184%" y="783.50"></text></g><g><title>_dl_start_final (1 samples, 0.33%)</title><rect x="97.3684%" y="757" width="0.3289%" height="15" fill="rgb(244,222,10)" fg:x="296" fg:w="1"/><text x="97.6184%" y="767.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.33%)</title><rect x="97.3684%" y="741" width="0.3289%" height="15" fill="rgb(236,179,52)" fg:x="296" fg:w="1"/><text x="97.6184%" y="751.50"></text></g><g><title>dl_main (1 samples, 0.33%)</title><rect x="97.3684%" y="725" width="0.3289%" height="15" fill="rgb(213,23,39)" fg:x="296" fg:w="1"/><text x="97.6184%" y="735.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.33%)</title><rect x="97.3684%" y="709" width="0.3289%" height="15" fill="rgb(238,48,10)" fg:x="296" fg:w="1"/><text x="97.6184%" y="719.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.33%)</title><rect x="97.3684%" y="693" width="0.3289%" height="15" fill="rgb(251,196,23)" fg:x="296" fg:w="1"/><text x="97.6184%" y="703.50"></text></g><g><title>elf_machine_rela (1 samples, 0.33%)</title><rect x="97.3684%" y="677" width="0.3289%" height="15" fill="rgb(250,152,24)" fg:x="296" fg:w="1"/><text x="97.6184%" y="687.50"></text></g><g><title>all (304 samples, 100%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(209,150,17)" fg:x="0" fg:w="304"/><text x="0.2500%" y="831.50"></text></g><g><title>perf-exec (7 samples, 2.30%)</title><rect x="97.6974%" y="805" width="2.3026%" height="15" fill="rgb(234,202,34)" fg:x="297" fg:w="7"/><text x="97.9474%" y="815.50">p..</text></g><g><title>[unknown] (7 samples, 2.30%)</title><rect x="97.6974%" y="789" width="2.3026%" height="15" fill="rgb(253,148,53)" fg:x="297" fg:w="7"/><text x="97.9474%" y="799.50">[..</text></g><g><title>[unknown] (7 samples, 2.30%)</title><rect x="97.6974%" y="773" width="2.3026%" height="15" fill="rgb(218,129,16)" fg:x="297" fg:w="7"/><text x="97.9474%" y="783.50">[..</text></g><g><title>[unknown] (7 samples, 2.30%)</title><rect x="97.6974%" y="757" width="2.3026%" height="15" fill="rgb(216,85,19)" fg:x="297" fg:w="7"/><text x="97.9474%" y="767.50">[..</text></g><g><title>[unknown] (7 samples, 2.30%)</title><rect x="97.6974%" y="741" width="2.3026%" height="15" fill="rgb(235,228,7)" fg:x="297" fg:w="7"/><text x="97.9474%" y="751.50">[..</text></g><g><title>[unknown] (7 samples, 2.30%)</title><rect x="97.6974%" y="725" width="2.3026%" height="15" fill="rgb(245,175,0)" fg:x="297" fg:w="7"/><text x="97.9474%" y="735.50">[..</text></g><g><title>[unknown] (7 samples, 2.30%)</title><rect x="97.6974%" y="709" width="2.3026%" height="15" fill="rgb(208,168,36)" fg:x="297" fg:w="7"/><text x="97.9474%" y="719.50">[..</text></g><g><title>[unknown] (7 samples, 2.30%)</title><rect x="97.6974%" y="693" width="2.3026%" height="15" fill="rgb(246,171,24)" fg:x="297" fg:w="7"/><text x="97.9474%" y="703.50">[..</text></g><g><title>[unknown] (7 samples, 2.30%)</title><rect x="97.6974%" y="677" width="2.3026%" height="15" fill="rgb(215,142,24)" fg:x="297" fg:w="7"/><text x="97.9474%" y="687.50">[..</text></g><g><title>[unknown] (7 samples, 2.30%)</title><rect x="97.6974%" y="661" width="2.3026%" height="15" fill="rgb(250,187,7)" fg:x="297" fg:w="7"/><text x="97.9474%" y="671.50">[..</text></g><g><title>[unknown] (7 samples, 2.30%)</title><rect x="97.6974%" y="645" width="2.3026%" height="15" fill="rgb(228,66,33)" fg:x="297" fg:w="7"/><text x="97.9474%" y="655.50">[..</text></g><g><title>[unknown] (7 samples, 2.30%)</title><rect x="97.6974%" y="629" width="2.3026%" height="15" fill="rgb(234,215,21)" fg:x="297" fg:w="7"/><text x="97.9474%" y="639.50">[..</text></g><g><title>[unknown] (6 samples, 1.97%)</title><rect x="98.0263%" y="613" width="1.9737%" height="15" fill="rgb(222,191,20)" fg:x="298" fg:w="6"/><text x="98.2763%" y="623.50">[..</text></g><g><title>[unknown] (6 samples, 1.97%)</title><rect x="98.0263%" y="597" width="1.9737%" height="15" fill="rgb(245,79,54)" fg:x="298" fg:w="6"/><text x="98.2763%" y="607.50">[..</text></g><g><title>[unknown] (6 samples, 1.97%)</title><rect x="98.0263%" y="581" width="1.9737%" height="15" fill="rgb(240,10,37)" fg:x="298" fg:w="6"/><text x="98.2763%" y="591.50">[..</text></g></svg></svg>